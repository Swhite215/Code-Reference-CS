Microsoft Certified: Azure Developer Associate

Serverless Applications in Microsoft Azure

    1. Module 1: Choosing the Best Azure Service to Automate Business Process
        a. Identify the Technology Options
            - Workflow Tools - Logic Apps, Microsoft Flow, WebJobs, and Azure Functions
            - Inputs, Actions - Simple executed operations, Conditions, Outputs
            - Logic Apps - automate, orchestrate, and integrate disparate components
                - Connector - Logic Apps component that provides an interface to an external service
            - Microsoft Flow - service to create workflows
                - Flows - automated, button, scheduled, business process
            - WebJobs - part of Azure App Service that you can use to run a program automatically
                - Continuous - looping, Triggered - manually started
            - Azure Functions
                - Templates - HTTPTrigger, TimerTrigger, BlobTrigger, CosmosDBTrigger
        b. Analyze the Decision Criteria
            - Design First vs. Code First
            - Integration vs. Brand New
            - User vs. Business vs. Developer
        c. Best Technology to Automate Business Needs
        d. When to Choose Azure Functions
            - Code-First and As Needed Use/Payment and Integrations with Logic Apps
    
    2. Module 2: Create Serveless Logic with Azure Functions
        a. Is Serverless Computing Right for You?
            - Serverless Compute - function-as-a-service FaaS
            - Azure Functions - serverless application platform
            - Benefits
                - Automatic Scaling, Language of Your Choice, No Servers to Manage, Only Charged on Use
            - Good For
                - Stateless Logic, Event Driven
            - Drawbacks
                - Timeout of 5 - 10 Minutes, HTTP Timeout of 7.5 - 12.5 Minutes
                - Execution Frequency
        b. Create a Function App in Azure Portal
            - Function App - Execution Context for Azure Functions
                - Service Plans
                    - Consumption Service - Azure Serverless Application
                    - Azure App Service - run function on VM
                - Storage Account - function must be linked to one
        c. Run Your Code On-Demand
            - Triggers
                - Blob Storage, Azure CosmosDB, Event Grid, HTTP, Microsoft Graph Events, Queue Storage, Service Bus, Timer
            - Bindings - connect data and services declaratively
                - read data from input bindings and write data to output bindings
            - Quickstart Templates
            - Testing - Manual or Within Portal
            - View Files - function.json and index.js
    
    3. Module 3: Execute an Azure Function with Triggers
        a. Determine the Best Triggers
            - Trigger - object that defines how an Azure function is invoked
            - Types - Timer, HTTP, Blob, Queue, Azure Cosmos DB, Event Hub
            - Binding - connection to data within your function
        b. Execute an Azure Function on a Schedule
            - CROM - second, minute, hour, day, month, day of the week
        c. Exercise - Create a Time Trigger
            - Function + -> Timer Trigger w/ CRON Schedule
        d. Execute an Azure Function off a HTTP Request
            - Authorization - Function, Anonymous and Admin
                - Function and Admin are key based - function or host keys
                - Anonymous - no authentication required
        e. Exercise - Create an HTTP Trigger
            - Function + -> HTTP Trigger w/ Authorization Level
        f. Execute an Azure Function when a Blob is Created
            - Azure Storage - Microsoft's cloud storage solution - Highly Available, Secure, Scalable, and Managed
            - Azure Blob Storage - storage solution designed to store large amounts of unstructured data
            - Types of Blobs - Block Blobs, Append Blobs, and Page Blobs
            - Blob Trigger - executes a function when a file is uploaded or updated in Azure Blob Storage
            - Path = blob-container/{parameter}.type
        g. Exercise - Create a Blob Trigger
            - Function + -> Blog Storage Trigger w/Storage Account
    
    4. Module 4: Chain Azure Function with Input and Output Bindings
        a. Explore Input and Output Binding Types
            - Binding - declarative way to connect to data from within your code
            - Input Binding - connection to a data source
            - Output Binding - connection to a data destination
            - Types of Bindings - Blob Storage, Azure Service Bus Queue, Cosmos DB, Event Hubs, External Files, External Tables, HTTTP Endpoints
            - Binding Properties - Name, Type, Direction, Connection
        b. Exercise - Explore Input and Output Bindings
            - Function App -> Trigger -> Integrate -> +Input or +Output
        c. Read and Write Data with Bindings
            
    5. Module 5: Durable Functions
        a. What are Durable Functions?
            - Enables implementation of complex stateful functions in a serverless environment
            - Benefits - event driven code, chain functions, orchestrate and coordinate, state is managed
            - Types
                - Cilent - entry point for creating an instance of a Durable Functions orchestration.
                - Orchestrator - function describes how actions are executed and the order
                - Activity - basic units in a durable function orchestration, actual work performed
            - Patterns
                - Function Chaining - execute a sequence of functions in a specific order
                - Fan In/Fan Out - executes multiple functions in parallel
                - Async HTTP APIs - HTTP Trigger start and then redirection of client to status endpoint
                - Monitor - reoccuring process, looking for change in state
                - Human Interaction - combine automation with human interaction
            - Durable vs. Logic Apps
                 - Durable - custom long running logic
                 - Logic Apps - integrating Azure services and components
        b. Design a Workflow based on Durable Functions
            - Workflow - Design Submitted -> Manager gets Approval Task -> Approve or Reject -> Optional: Escalation
            - Workflow Function Types - Client -> Orchestration -> Activity -> Activity
        c. Exercise - Create a Workflow using Durable Functions
        d. Control Long-Running Tasks using Others
            - Use Timers instead of setTimeout() and setInterval()
        e. Exercise - Add a Durable Timer to Manage Long-Running Task