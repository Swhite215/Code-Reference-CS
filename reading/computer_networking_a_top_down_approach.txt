Title: Computer Networking: A Top-Down Approach
Authors: Jim Kurose and Keith Resources

Summarization of Content

Chapter 1 - Computer Networks and the Internet
    a. What is the Internet?
        - Nuts and Bolts
            - End Systems
            - Communication Links and Packet Switches - Connect End Systems
            - Transmission Rate - Bits/Second
            - Packets - Segments of Data with Header Bytes
            - Routers and Link-Layer Switches - Connect End Systems
            - Route or Path - Sequence of Communication Links and Packet Switches Traversed by a Packet
            - Internet Service Providers - Provide End Systems Access to Internet
            - Transmission Control Protocol and Internet Protocol
            - Internet STandards - Request For Comments RFC
        - A Service Description
            - Internet is infrastructure that provides services to applications
            - Socket Interface - How program on end system asks internet to deliver data to program on another end system
        - What is a Protocol?
            - Defines the format and the order of messages exchanged between two or more communicating entities, as well as the actions
            taken on the transmission and/or receipt of a message or other event
    b. The Network Edge
            - Hosts - Clients or Servers
            - Access Networks
                - Network that physically connectes a end system to the first router on a
                path to any other distance end system
            - Home Access - Digital Subscriber Line DSL
                - Obtained from telephone company
                - Telephone line to Digital Subscriber Line Access Multiplexer DSLAM
                - Telephone Line Frequencies - High-Speed Downstream 50 kHz to 1MHz
                - Telephone Line Frequencies - Medium-Speed Upstream Channel 4kHz to 50 kHz
                - Telephone Line Frequencies - Ordinary Two-Way Channel 0 to 4kHz
            - Home Access - Cable
                - Cabel Modem -> Coaxial Cable -> Fiber Node -> Fiber Cable -> Cable Modem Terination System
            - Home Access - Fiber to the Home
                - Optical Network Terminator -> Customer Fiber -> CO Fiber -> Optical Line Terminator
            - Home Access - Satellite and Dial-Up Access
            - Physical Media
                - Physical Medium - Where bit is sent across by propagating electromagnetic waves or optical pulses
                - Physical Medium - Guided or Unguided
                - Twister-Pair Copper Wire - Shielded vs. Unshielded
                - Coaxial Cable
                - Fiber Optics
                - Terrestrial Radio Channels
                - Satellite Radio Channels - Geostationary and Low-Earth Orbiting
    c. The Network Core
        - Packet Switching
            - Messages broken down into chunkcs of data
            - Packets pass through routers/link-layer switches and communication links
            - Store-And-Forward Transmission - Packet switch must receive entire packet before transmissions
            - Queing Delays - Caused by packets collecting in output buffer
            - Packet Loss - Packets are lost when output buffer is full
            - Forwarding Tables - Maps destination addresses to that router's outbound link
            - Routing Protocols - Used to automatically set the forwarding tables
        - Circuit Switching
            - Resources are reserved for the duration of the communication session between end systems
            - Uses dedicated end-to-end connections
            - Multiplexing - Frequency-Division or Time-Division Multiplexing
                - Link dedicates a frequency band for each connection, width is bandwidth
        - Network of Networks
            - Network Structure 1 - All access ISPs connected with a single global transit ISP
            - Network Structure 2 - 100,000s of access ISPs and multiple global ISPs
            - Network Structure 3 - Access ISPs to Regional ISPs to Tier-1 ISPs
            - Network Structure 4 - Points of Presence PoP, Multi-Homing, Peering, and Internet Exchange Points IXPs
            - Network Structure 5 - Content-Provider Networks  - Like Google
    d. Delay, Loss, and Throughput in Packet-Switched Networks
        - Nodal Processig Delay - Time required to examing packets headers and determing where to direct the packet
        - Queuing Delay - Time till entire packet is in output buffer
        - Transmission Delay - Time required to push all of the packet's bits into the link
        - Propogation Delay - Time required to propagate from beginning of link to router
        - Total Delay = Nodal + Queuing + Transmission + Propogation
        - Traffic Intensity - Bits * Average Rate of Packet Arrival to Queue / Transmission Rate La/R
        - Traceroute
        - Throughput - Average = Bits / Transfer Time, Transmission Rate of the Bottleneck Link
    e. Protocol Layers and Their Service Models
        - Layered Architecture - Protocol Layering
        - Application Layer - Network applications and their application-layer protocols reside
        - Transport Layer - Transports application-layer messages between application endpoints
        - Network Layer - Moving datagrams from one host to another TCP/UDP
        - Link Layer - Routes a datagram through a series of routers between the source and destination
        - Physical Layer - Move bits witin the frame from one node to the next
        - OSI - Physical, Data Link, Network, Transport, Session, Presentation, Application
        - Encapsuation - Up and Down Encapuslation and Decapsulation
    f. Networks Under Attack
        - Malware - Trojans, Worms, Virus, Botnet, DoS, DDoS, Packet Sniffing, IP Spoofing
    g. History of Computer Networking and the Internet
        - Packet Switching 1961 - 1972
        - Proprietary Networks and Internetworking - 1972 - 1980
        - Proliferation of Networks - 1980 - 1990
        - Internet Explosion - 1990s
        - New Millenium - Broadband, High-Speed WiFi, Online Social Networs, Content Provider Networks, Cloud
        
Chapter 2 - Application Layer
    a. Principles of Networking Applications
        - Network Application Architectures
            - Client-to-Server - host called a server that handles requests from a host called a client
                - Google, Amazon, Netflix
            - Peer-to-Peer - direct communication between pairs of intermittenly connected hosts called peers
                - Bitcoin and BitTorrent
        - Processes Communicating
            - Process - a program that is running within an end system
            - IPC - interprocess communication among programs running on same end system
            - Client and Server Processes
                - Browser = Client and Web Server = Server
            - Interface Between the Process and Computer Networks
                - Process -> Socket -> Transport Layer -> Socket -> Another Process
            - Addressing Processes
                - Receiving Process - address of the host and an identifier (port/socket) specifiying the receiving process
                - Internet Protocol - address identifying hosts on the internet
                - Port Number - identifier specifying the port/socket related to the receiving process
        - Transport Services Available to Applications
            - Goal - handle the responsibility of getting messages from sending socket to receiving socket
            - Reliable Data Transfer - guarantees quality data delivery
            - Loss-Tolerant Applications - transport layer protocol does not provide reliable data transfer
            - Throughput - rate at which the sending process can deliver bits to the receiving process
                - Bandwidth-Sensitive Applications - applications that have throughput requirements
                - Elastic Applications - can make use of as much or as little throuhgput as happens to be available
            - Timing Guarantees
            - Security - Encryptiong and Decryption of Data
        - Transport Services Provided by the Internet
            - TCP Services
                - Connection-Oriented Service
                - Reliable Data Transfer Service
            - UDP Services
                - Connectionless Service
                - Unreliable Data Transfer Service
        - Securing TCP
            - Secure Socket Layer SSL
            - Transport Layer Security TSL
        - Examples
            - Electronic Mail - SMTP - TCP
            - Remote Terminal Access - Telnet - TCP
            - Web - HTTP - TCP
            - File Transfer - FTP - TCP
            - Streaming Multimedia - HTTP - TCP
            - Internet Telephony - SIP/RTP - UDP or TCP
        - Application Layer Protocols
            - Goal - defines how an application's processes, running on different end systems, pass messages to each other
            - Defines - type of messages, syntax, semantics, rules
    b. The Web and HTTP
        - Overview of HTTP
            - Hyper Text Transfer Protocol
            - Pull Protocol
        - Vocabulary
            - Web Page - document consisting of objects (files)
            - Web Browsers - implement client side of HTTP
            - Web Servers - implement the server side of HTTP
            - Transport Layer Protocol - TCP
        - Non-Persistent and Persistent Connections
            - HTTP with Non-Persistent Connections
                - TCP Handshake -> HTTP Client TCP Connection to Server -> HTTP Client HTTP Request Message -> 
                HTTP Server HTTP Response Message -> HTTP Client Received Message -> TCP Connections Close
            - HTTP with Persistent Connections
                - TCP connections do not close 
        - HTTP Request Message Format
            - Request Line, Header Lines, Body
        - HTTP Response Message Format
            - Status Line, Header Lines, Body
        - Cookies
            - HTTP Client Request -> HTTP Server Set-Cookie Response -> HTTP Client Request w/ Cookie -> HTTP Server Response -> Repeat HTTP Request w/ Cookie and HTTP Server Response
        - Web Caching
            - Cache or Proxy Server - network entity that satisfies HTTP request on behalf of an origin web server
            - HTTP Client Request -> Proxy Server -> Proxy Server Cache Check + Request -> HTTP Server Response -> Proxy Server Receival -> HTTP Client Receival
            - Content Delivery Networks - Utilize cache systems with servers
        - Conditional Get
            - HTTP mechanism that allows a cache to verify that its objects are up to date
    c. Electronic Mail and the Internet
        - Components - User Agents, Mail Servers, and Simple Main Transfer Protocol SMTP
        - SMTP
            - Alice Agent -> Alice's Mail Server Message Queue -> SMTP to Bob's Mail Server Message Queue -> Bob's Agent
            - Push Protocol 
        - Mail Message Formats
            - Header Lines, and Body
        - Mail Access Protocols
            - Post Office Protocol Version 3 POP3 - Mail Server to User Agent
                - TCP Connection - Authorization, Transaction, and Update
            - Internet Mail Access Protocol IMAP - Mail Server to User Agent
                - TCP Connection - Folders Capability
            - Simple Mail Transfer Protocol - Mail Server to Mail Server
    d. DNS - The Internet Directory Service
        - Domain Name System DNS - Distributed database used to translate hostnames into IP addresses
        - Services Provided By DNS
            - Host Aliasing, Mail Server Aliasing, Load Distribution
        - Process
            - User Client-Side DNS Application -> Hostname to Client-Side DNS Application -> DNS Client Query to DNS Root Server ->
            DNS Client Query to DNS Top-Level Domain Server -> DNS Client Query to Authoritative DNS Server -> Host HTTP Client Request w/ Server Address
        - Overview Hierarchy
            - Root, Top-Level Domain (org, com, net, edu) and Authoritative
            - Local DNS Server - proxy to DNS server hierarchy
        - DNS Caching
            - Cache mapping of hostname to ip address
        - DNS Records and Messages
            - Resource Record - Fourt uple (Name, Value, Type, TTL)
            - Type = A - Name = Hostname, Value = IP Address
            - Type = NS - Name = Domain, Value = Hostname of Authoritative DNS Server
            - Type = CNAME - Name = Domain, Value = Canonical Hostname for Alias
            - Type = MX - Name = DOmain, Value = Canoncail Name of Mail Server for Alias
        - DNS Messages
            - Query and Reply Messages
            - Header (Identification, Number of Question, Number of Authority RRs), Questions, Answers, Authority, Additional Information
        - Inserting Records into the DNS Database
            - Registrar - commercial entity that verifies the uniqueness of the domain name, enters the domain name into the dns database, and collects a small fee
    e. Peer-to-Peer Applications
        - Scalability of P2P
        - BitTorrent
    f. Video Streaming and Content Distribution Networks
        - Internet Video
        - HTTP Streaming and DASH
            - Dynamic Adaptive Streaming over HTTP - multiple versions wirh different bit rates and quality levels
        - Content Distribution Networks CDN
            - Private CDN - owned by the content provider itself such as Google
            - Third-Party CDN - distributes content on behalf of multiple content providers
            - Server Placement Philosophies
                - Enter Deep - server clusetrs in access ISPs all over the world in order to get close to users
                - bring Home - building larger clusters at a small number of sites, usually Internet Exhange Points IXP
            - Examples - Youtube, Netflix, and Kankan
    g. Socket Programming: Creating Network Applications
        - Socket Programming with UDP
            - Client Socket -> Client Socket Send Message -> Server Socket Listenting at Port -> Server Socket Rceive and Send Back Message -> Client Socket Receive Message -> Client Socket Closes
        - Socket Programming with TCP
            - Client Socket -> Client Socket Connect -> Server Socket Listening at Port -> Server Socket Accept Connection -> Client Socket Send Message ->
            Server Connection Socket Receive and Send Back Message -> Server Connection Socket Close -> Client Socket Receive Message -> Client Socket Close

Chapter 3 - Transport Layer
    a. Introduction and Transport Layer Services
        - Relationship Between Transport and Network
            - Logical Communication - as if the hosts running the processes were directly connected
            - Transport Layer Segments -> Network Layer Datagrams
            - Transport - Connection between processes on different hosts
            - Network - Connection between hosts
        - Overview of the Transport Layer in the Internet
            - User Datagram Protocol - connectionless, unreliable
            - Transmission Control Protocol - connection-oriented, reliable, congestion control
            - Network Protocol - Internet Protocol - best-effort, unreliable delivery service
            - Tranport-Layer Multiplexing and Demultiplexing - extending host-to-host delivery to process-to-process delivery
    b. Multiplexing and Demultiplexing
        - Demultiplexing - delivering data in a transport-layer segment to the correct socket
        - Multiplexing - gathering data chunks at source host, encapsulating each data chunk with header information to create segments, and passing segment to the network Layer
        - Segment Fields - source port nunmber field and destination port number field
        - Connectionless - UDP source port number and destination port number
        - Connection-Oriented - TCP source port number, source IP address, destination port number and destination IP address for back and forth transmission
    c. Connectionless Transport: UDP
        - Characteristics
            - Finer application-level control over what data is sent and when
            - No connection establishment
            - No connection state
            - Smal packet header overhead
        - UDP Segment Structure
            - Source Port, Destination Port, Length, Checksum, Application Data
            - Error checking but no recovery
    d. Principles of Reliable Data Transfer
        - Goal - no tranferred data bits are corrupted, or lost, and all are delivered in the order in which they were sent
        - Reliable Data Transfer v1.0
            - Underlying channel is completely reliable
        - RDT with Bit Errors v2.0
            - Positive and Negative Acknowledgements = Automatic Repeat reQuest Protocol
            - Error Detection, Receiver Feedback, Retransmission
            - Stop and Wait Protocol
            - Handling corrupt ACK or NAK - Repeat, checksum, retransmission, sequence number
        - RDT over Lossy Channel with Bit Errors v3.0
            - Add countdown timer for retransmission
        - Pipelined RDT Protocols
            - Goal - sending multiple packets without waiting for acknowledgements
        - Go-Back-N GBN
            - Goal - allowed to transmit multiple packets but is constrained to have no more than some maximum allowable number of unacknowledged packets in the pipeline
            - Sliding-Window protocol - window size is maximum allowable number of packets
            - Events - invocation from above, receipt of an ACK, a timeout
        - Selective Repeat SR
            - Goal - allowed to transmit multiple packets whil reducing unnecessary retransmission by sending only those packets that is suspects were received in error
            - Events - invocation from above, timeout, receipt of an ACK
    e. Connection-Oriented Transport: TCP
        - The TCP Connection
            - Connection-Oriented, Full Duplex Service, Point to Point
            - Three-Way Handshake
            - Send Buffer - edge of socket buffer before network layer
            - Maximum Segment Size - maxmimum amount of daat that can be placed in a segment
            - Process A -> Socket A -> Client TCP Send Buffer -> Segments over Network -> TCP Server Receive Buffer -> Socket B -> Process B
            - Cumulative Acknowledgements - acknowledge bytes up to the first missing byte
        - TCP Segment Structure
            - Source Port, Destination Port, Sequence Nu,ber, Receive Window, header Length Field, Options Field, Flag Field, SYN, FIN, CWR, ECE, URG, ACK, PSH, RST, Checksum, Urgent Data Pointer
        - Round Trip Time Estimation and Timeout
            - Estimated Round Trip Time EstimatedRTT
            - Sample Round Trip Time SampleRTT
        - Reliable Data Transfer
            - Single Transmission Timer
            - Doubling the Timeout Interval - doubles timeout interval each time TCP retransmits
            - Fast Retransmit - retransmitting the missing segment before the segment's timer expires after receiving three duplicate ACKs
            - Flow Control - eliminate overflowing the receiver's buffer by matching the rate at which the sender is sending against the rate at whcih the receiving application is reading
        - TCP Connection Management
            - Connecting - Client SYN -> Server SYNACK -> Client SYNACK
            - Closing - Client FIN -> Server ACK -> Server FIN -> Client ACK
            - TCP Client States - CLOSED, SYN_SENT, ESTABLISHED, FIN_WAIT_1, FIN_WAIT_2, TIME_WAIT
            - TCP Servere States - LISTEN, SYN_RCVD, ESTABLISHED, CLOSE_WAIT, LAST_ACK
    f. Principles of Congestion Control
        - Causes and Cost of Congestion
            - Large queuing delays as the packet arrival rate nears the link capacity
            - Sender must performa retransmissions in order to compensate for dropped packets due to buffer overflow
            - When a packet is dropped, the transmission capacity that was used at each of the upstream links to forward that packet ends up being wasted
        - Approaches to Congestion Control
            - End-To-End
            - Netrwork-Assisted Congestion Control
    g. TCP Congestion Control
        - Senders rate is congestion window / RTT bytes/sec
        - Adjust congestion window to adjust the rate at whcih data is sent into the connection
        - How do TCP senders detemine their sending rates such that they dont congest the network but at the same time make use of all the available bandwidth?
            - A lost segment implies congestion, and hence, the TCP sender's rate should be decreased
            - An ACK indicates that the netork is delivering the sender's segments to the receiver, and hence, the sender's rate can be increased
            - Bandwidth probing cycle of checking
        - TCP Congestion-Control Algorithm
            - Slow-Start - congestion widnow increased by 1 MSS every time a transmitted segment is first ACK
            - Congestion-Avoidance - when cwnd equals slow start threshold, cwnd is havled and increases only by one
            - Fast-Recovery - value o cwnd is increased by 1 MSS for every duplicate ACK received for the missing segment that caused TCP to enter fast-Recovery
            - Retrospective
                - Additive-Increase, Multiplicative Decrease AIMD
            - Fairness - average transmission rate of each connection is R Transmission Rate / K Connections
            - Explicit Congestion Notification ECN: Network-Assisted Congestion Control
                - Network explicilty signlas congestion to TCP sender and receiver
                - Two Bits, Four Values, in the Type of Service field of the IP datagram header
