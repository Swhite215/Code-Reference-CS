Title: Computer Organization and Design Fundamentals
Authors: David Tarnoff

Summarization of Content

Chapter 1 - Digital Signals and Systems
    a. Should Software Engineers Know About Hardare?
        - Important Concepts/Advantages - System Design Tools, Software Design Tools, Troubleshooting Skills, Interconnectivity, Marketability
    b. Non-Digital Signals
        - Analog - continuous, infinite number of places to the right of the decimal point
    c. Digital Signals
        - Digital Value - fixed number of digits the right of the decimal place, discrete
        - Sample - measurements at different intervals
        - Sample Rate - the rate that samples are taken
        - Concerns - information can be lost between measurements and lost due to the rounding of the measurement
    d. Conversion Systems
        - Sensor (Weak, Noisy) -> Signal Conditioning (Strong, Clean) -> Analog to Digital Converter (Digital Measurement)
        - Benefits
            - Noise cannot attach itself to a digital signal, sequence of numbers do not change (unless loss during transporation e.g.)
            - Algorithms can be used to operate on data - DSP or Digital Signal Processing
    e. Representation of Digital Signals
        - Transistor - remembers either 0 (logic 0) or 1 (logic 1) i.e. a binary system
    f. Types of Digital Signals
        - Edges
            - Rising Edge - a transition from a logic 0 to a logic 1
            - Falling Edge - a transition from a logic 1 to a logic 0
        - Pulses
            - Pulse - a signal changes from one value to the other for a short period, then returns to its original value
            - Positive-Going Pulse - idle state of logic 0, and a pulse to logic 1
            - Negative-Going Pulse - idle state of logic 1, and a pulse to logic 0
        - Non-Periodic Pulse Trains - some signals do not have a characteristic pattern in their changes e.g. ethernet or address lines
        - Periodic Pulse Trains - all measurements between any two subsequent identical parts of the waveform produce the same value (period)
            - Width - time at logic 1 during the period, may differ with another train with a similar period
        - Frequence (Hertz) = 1 / period in seconds
            - Example - .1 second to complete period, so 1 / .1 = 10 or 10hz i.e. 10 periods per second
        - Pulse Width Modulation
            - Duty Cycle - represents the percent of time that a periodic cycle is a logic 1
            - Dimming lights can be done by changing pulse train/duty cycle, shine half as bright is to reduce by 50%

Chapter 2 - Numbering Systems
    a. Unsigned Binary Counting
        - 0000, 0001, 0010, 0011, 0100, 0101, 0110, 0111, 1000, 1001, 1010, 1011, 1100, 1110, 1111
    b. Binary Terminology
        - Nibble - a four bit binary number
        - Byte - eight it binary numbe 
        - Word - sixteen bit, two byte binary number
        - Double Word - thirty-two bit, four byte binary number
    c. Unsigned Binary to Decimal Conversion
        - 2^N*(1 | 0) + , ...
    d. Decimal to Unsiged Binary
        - Decimal / 2, take remainder
    e. Hexadecimal Representation
        - ABC = 1010 1011 1100
        - Converting Binary to Hexadecimal - group by four, use table
        - Converting Decimal to Hexadecimal - decimal / 16, take remainder
        - Converting Hexadecimal to Decimal - 16^N*(X) + , ...
    f. Binary Coded Decimal
        - 1692 is 0001 0110 1001 0010

Chapter 3 - Binary Math and Signed Representations
    a. Binary Addition
        -  0010
        - +1010
        -  1100
    b. Binary Subtraction
        -  1010
        - -1001
        -  0001
    c. Binary Complements
        - One's Complement - 1010 = 0101
        - Two's Complement - 1010 = 0101 + 1 = 0110
    d. Signed
        - Most Significant Bit as A Sign Indicator
            - A binary value with a 0 in the MSB position is considered positive
            - A binary value with a 1 in the MSB position is considered negative
    e. Hexadecimal Addition
        -  ABC
        - +921
        - 13DD
    f. Multiplication
        - Shifting all of the bit positions to the left is multiplying by two
        - 000001001 = 9, 18 = 000010010
    g. Divison
        - Shifting all of the bit positions to the right is dividing by two
        - 000001001 = 9, 18 = 000010010
        - A division by 16, is 4 shifts to the right, as 2^4 = 16
        - Important - make sure you verify data isn't being lost*

Chapter 4 - Logic Functions and Gates
    a. Logic Gate Basics
        - Gate - takes one or more binary signals as input and using a specific algorithm ouputs a single bit as a result
        - NOT Gate - takes a single input and flips the value of the signal
        - AND Gate - produces 1 only if all of its inputs are logic 1
            - Example - A lamp is on if there is power, wall switch, and lamp switch
        - OR Gate - produces 1 if any of its inputs are logic 1
            - Example - A security alarm goes off if door open sensor, or glass break sensor, or motion sensor goes off
        - XOR Gate - produces 1 if number of 1 is odd
    b. Truth Tables
    c. Timing Diagrams for Gates - REVIEW
    d. Combinational Logic
        - Power of logic gates comes when you combine them to create combinational logic
        - Example
            - Door, Glass, Motion sensors into OR Gate
            - Result of OR Gate + Armed into AND Gate
        - Gates
            - NAND GATE, NOR GATE, EXCLUSIVE NOR
    e. Truth Tables for Combinational Logic
        - Start with A, B, C
        - Then Complete Each Step, Using the Appropriate Inputs
        - A Step - B value and NOT Gate
        - B Step - Result of A Step, and A value
        - C Step - Result of B Step and C Value
        - D Step - Result of C and NOT Gate
    f. Adder Circuit in ALU
        - 4-Bit Parallel Adder - 74LS283 - assembly/circuits/four_bit_adder_circuit
        - Full Adder Truth Table - assembly/circuits/full_adder_truth_table
        - Full Adder Boolean Expressions
            - Sum = (A XOR B) XOR Cin
            - Carry Out = A AND B OR Cin(A XOR B)
        - Full Adder Circuit - assembly/circuits/full_adder_circuitverse

Chapter 5 - Boolean Algebra
    a. Need for Boolean Expressions
        - Describes digital circuitry, and the possibly complex relationships amongst signals
    b. Symbols of Boolean Algebra
        - AND, OR, NOT, XOR, NAND, NOR, NOTXOR
    c. Laws of Boolean Algebra
        - Commutative Law - A + B = B + A
        - Associative Law - A(BC) = (AB)C or A+(B+C) = (A+B)+C
        - Distributive Law - A(B+C) = AB+AC
        - OR Rules
            - A + 0 = A
            - A + 1 = 1
            - A + A = A
            - A + !A = 1
        - AND Rules
            - A^0 = 0
            - A^A = A
            - A^!A = 0
            - A^1 = A
        - XOR Rules
            - A XOR O = A
            - A XOR 1 = !A
            - A XOR A = 0
            - A XOR !A = 1
    d. Simplification - through use of laws of boolean algebra
    e. DeMorgan's Theorem
        - !(A+B) = !A^!B
        - !A + !B = !(AB)

Chapter 6 - Standard Boolean Expression Formats
    a. Sum of Products - a sum of one or more products e.g. ABCD + A!BD + C!D + A!D
    b. Converting an SOP Expression to a Truth Table - Review Class Notes
    c. Converting a Truth Table to an SOP Expression - Review Class Notes
    d. Product of Sums - Outputs of multiple OR gates are combined with a single AND gate
    e. Converting POS to Truth Table - Review Class Notes
    f. Converting a Truth Table to a POS Expression - Review Class Notes

Chapter 7 - Karnaugh Maps
    a. Main Idea - graphic representations of truth tables
    b. Using Karnaugh Maps
        - The key to effectively using K-Maps is to find the largest group of adjacent cells containing 1's
        - The larger the groups, the fewer products and inputs will be needed to create the boolean expression that produces the truth table
        - Rules
            - Grouping must be in the shape of a rectangle
            - All cells in a rectangle must contain ones, or an X
            - The number of the cells must equal a power of two i.e. 1, 2, 4, 8, or 16
            - Outside edges of maps are considered adjacent
            - Cells may be contained in more than one rectangle, but every rectangle must have atleast one cell unique to it
            - Every 1 must be covered by at least one rectangle

Chapter 8 - Combinational Logic Applications
    a. Adders
        - Half Adder
            - Inputs - A, B
            - Outputs - Sum, Carry Out
        - Full Adder
            - Inputs - A, B, CarryIn
            - Outputs - Sum, CarryOut
        - Daisy chain Full Adders to produce adder's of any size
    b. Seven Segment Displays
        - Segments - A, B, C, D, E, F, G
        - Main Idea - light segments to produce numbers e.g. b and c produce 1
        - Inputs - A, B, C, D
        - Outputs - Active Mix of A, B, C, D, E, F, G
    c. Active Low Signals
        - On signal is equivalent to a logic 0, and off is equivalent to a logic 1
    d. Decoders
        - Digital signals are used to enable a device
    e. Multiplexers
        - Uses a set of control inputs to select which of several data inputs is to be connected to a single data output
    f. Demultiplexer
        - Take a single input and select one channel out of a group of output channels to which it will route the input
    g. Integrated Circuits
        - Chips made to perform specific tasks like those mentioned above



        