Google Cloud Fundamentals: Core Infrastructure

1. Introducing Google Cloud
    - Overview of Cloud Computing
    - IaaS and PaaS and Saas
        - Infrastructure as a Service
        - Platform as a Service
        - Software as a Service
    - The Google Cloud Network
        - Features
            - Designed for High Throughput
        - Infrastructure Locations
            - North America, South America, Europe, Asia, Austrailia
            - https://cloud.google.com/about/locations
        - Location -> Multiple Regions -> Multiple Zones
        - Europe - europe-west2 -> europe-west2-a, europe-west2-b, europe-west2-c
        - Note - some services can run in multiple geographic locations
        - Current Numbers - 112 Zones, 37 Regions 04/10/2023
    - Environmental Impact
        - Commitment 
            - Carbon Neutral, Renewable Energy, Carbon Free
    - Security
        - GCP - designed with security in mind
        - Layered Approach
            - Hardware Layer
                - Hardware Design and Provenance
                - Secure Boot Stack - ensure booting correct software stack
                - Premises Security - multiple layers of physical security protections
            - Service Deployment
                - Encryption of inter-service communication
            - User Identity Level
                - Universal Two-Factor Authentication
                - Zero Trust Model
            - Storage Service Level
                - Encryption at Rest
                - Hard Drives and SSDs Hardware Encryption
            - Internet Communication Level
                - Google Front End - all registered services use TLS
                - Denial of Service Protection - multi-tier, multi-layer DoS protections
            - Operational Security Level
                - Intrustion Detection
                - Reducing Insider Risk
                - Employee Universal Second Factor
                - Software Development Practices
            - https://cloud.google.com/docs/security/infrastructure/design
    - Open APIs and Open Source
        - Open-Source Friendly
        - Examples
            - TensorFlow - open source library for machine learning
            - Kubernetes - container orchestration
            - Google Cloud's Operation Suite
    - Pricing and Billing
        - Types
            - Google Compute Products - billed per second (after 1st minute)
            - Sustained Use Discount - use resource a dedicated amount results in a discount
            - Committed Use Discount
            - Custom Virtual Machine Types
        - Google Cloud Pricing Calculator
        - Billing Tools - Budgets, Alerts, Reports, Quotas (Hard Limits)
            - Rate Quota - resets after a specific time
            - Allocation Quota - govern number of resources in a project

2. Resources and Access in the Cloud
    - Google Cloud Resource Hierarchy
        - Org Node -> Folders -> Projects -> Resources
        - Project
            - Separate entities under the Org node
            - Hold resources, each of which belongs to just one project
            - Can have different owners and users
            - Billed separately
            - Project ID - globally unique, assigned, immutable
            - Name - not unique, chosen by you, mutable
            - Project Number - globally unique, assigned, immutable
        - Resource Manager - manages projects
            - Gather a list of projects
            - Create new projects
            - Update existing projects
            - Delete projects
            - Recover previouslyu deleted projects
            - Access through RPC API or REST API
        - Folder - contains resources
            - The resources inherit policies and permissions assigned to folders
            - Group projects together
        - Organziation Node/Roles
            - Policy Administration - super user for the whole of the organization
            - Project Creator
            - New Organization
                - Google Workspace Customer - projects will automatically belong to your org node
                - Non-Google Workspace - use cloud identity to create organization node
        - Policies - who can do what, access is granted
            - Organization Node Policy
    - Identity and Access Management
        - Big Idea - who can do what on which resources
        - Policies are managed and applied by IAM
    - IAM Roles
        - Basic - broad in scope, basic viewer, editor
        - Predefined - match job needs e.g. instanceAdmin, about 1,300, bundled permissions
        - Custom - name, description, id, and permissions
    - Service Accounts
        - Applications that need to communicate with other services or applications e.g. virtual machine communicating with cloud storage
        - Identity applied to resource as a service account, and permissions can be applied to service accounts
    - Cloud Identity (Google not GCP)
        - Manages team and organization access
        - Gmail Account -> Google Cloud Consoles -> Google Groups
    - Interaction with Google Cloud
        - Google Cloud Console - https://console.cloud.google.com/
        - CloudShell + GCloud - Browser Terminal and CLI Tool
        - Cloud SDK + GCloud - Local Terminal and CLI Tool
        - APIs REST and RPC
        - Cloud Mobile App
    - Lab - Getting Started with Cloud Marketplace
        - Deploy LAMP Application using Bitnami

3. Virtual Machines and Networks in the Cloud
    - Virtual Private Cloud Networking
        - Secure, individual, private cloud computing model hosted within a public cloud
        - Features
            - Connect Google Cloud resources to each other and to the internet
            - Segments networks
            - Globally unique and have subnets in any Google Cloud region worldwide
            - VPC subnets connect resources in different zones
            - Uses firewall to restrict access to instances
            - Creates static routes to forward traffic to specific destinations
    - Compute Engine
        - Virtual Machines
        - Configuration
            - General Purpose, Compute Optimized, Memory Optimized, GPUs
            - https://cloud.google.com/compute/docs/machine-resource
        - Pricing and Billing
            - Sustained Use - use for a specific amount of time
            - Committed Use - commit to using a specific amount of resources for a specific amount of time
            - Spot VMs - 80-90% discount, VM might not be available and can be taken away from you at anytime
                - https://cloud.google.com/compute/docs/instances/create-use-preemptible#best_practices
                - https://cloud.google.com/compute/docs/instances/create-use-spot#best-practices
            - Pay for only what you need, use, want
    - Scaling Virtual Machines
        - Auto-Scaling - multi-dimensional scaling based on multiple metrics
    - Important VPC Capabilities
        - VPCs do not require a router to be provisioned
        - Routing Tables
            - Built in so you dont have to provision or manage a router
            - Used to forward traffic from one instance to another
        - VPCs do not require a firewall to be provisioned
        - VPC Firewall
            - Restricts access to instances through both incoming and outgoing traffic
            - Rules be defined through network tags on Compute Engine instances
        - VPC Peering - VMs in different VPCs communicate using internal IPs
        - Shared VPC - VMs in other projects can join VPC in another project
    - Cloud Load Balancing
        - Load balancing distributes traffic across instances
        - Cloud Load Balancing
            - Full distributed, software-defined, managed service
            - HTTP, TCP, SSL, UDP, Proxy, Regional, Regional Internal
            - Provides single as well as cross region load balancing, including automatic multi-region failover
            - No pre-warming is required for anticipated spikes in traffic
            - Internal vs. External
    - Cloud Domain Name Service
        - Public DNS Service - 8.8.8.8
    - Cloud Content Delivery Network
    - Connecting Networks to Google VPC
        - Cloud VPN
            - IPSec VPN Protocol
                - Creates a VPN tunnel connection
                - Use Cloud Router to make the connection dynamic
                - Let others network and Google VPC exchange route information over the VPN using the Border Gateway Protocol
                - Not always the best option because of security concerns or bandwidth reliability
                - Small number of MBs
            - Dedicated Interconect
                - Good solution for getting highest uptimes for interconnection
                - Allows for one or more direct private connections to Google
                - 99.99% SLA
                - Connections can be backed up by a VPN for even greater reliability
                - More MBs than IPSec VPN
            - Partner Interconnecxt
                - ISP links your on-prem with your VPC
                - Can be configured to suppor tmission criticl services or applications that can tolerate some downtime
                - Small number of MBs
                - 99.99% SLA
            - Direct Peering
                - Puts a router in the same public datacenter as a Google Point of Presence
                - Uses a router to exchange traffic between networks
                - Connects to more than 100 Google points of presence around the world
            - Carrier Peering
                - ISP
    - Lab - Getting Started with VPC Networking and Google Compute Engine
        - Notes
            - Make sure you create the firewall rules
            - Allow internal -> Allow custom firewall rule
            - Routes do not appear to disappear, refresh the page
            - Don't confuse SSH terminals with Cloud Shell

4. Storage in the Cloud
    - Cloud Storage
        - Fully managed service
        - Uses - website content, archival and disaster recovery, direct download
        - Bucket
            - Where - region, multiple zone, zonal
            - Storage Class - standard, nearline, coldline, archive
            - Access Control - uniform, fine-grained
            - Data Protection - object versioning, retention policy, data encryption
        - Pricing: https://cloud.google.com/storage/pricing
    - Cloud SQL
        - Databases - MySQL, PostgreSQL, SQL Server
        - Tasks
            - Applying patches/updates, managing backups, and configuring replications
        - Reasons
            - Doesn't require any software installation or maintenance
            - Can scale up to 64 processor cores, 400+GB of RAM and 64 TB of storage
            - Supports automatic replication scenarios
            - Supports managed backups
            - Encrypts data
            - Includes a network firewall
        - Cloud SQL instances are accessible by other Google Cloud and external services
        - SLA: https://cloud.google.com/sql/sla
    - Cloud Spanner
        - Fully managed relational database
        - Features
            - Scales horizontally and globally
            - Strongly consistent
            - Speaks SQL
            - Strongly Consistent
        - Applications
            - SQL relational database management system
            - High availability
            - Strong global consistency
            - High numbers of I/O operations per second
    - Firestore
        - NoSQL Database
        - Forms
            - Document
            - Data Store
        - Features
            - Flexible, scales horizontally, NoSQL cloud database
            - Automatic multi region data replication
            - Strong consistency guarantees
            - Atomic batch operations
            - Real transaction support
        - Applications
            - Ideal for mobile and web development
        - NoSQL Queries
            - Retrieve individual documents
            - Retrieve all documents in a collection
        - Mode
            - Offline and online data synchronization
    - Cloud Bigtable
        - Google's NoSQL big database service
        - Features
            - Handle massive workloads
            - Consistent low latency
            - High throughput
            - Millions of Rows a Second
            - Less than 10ms updates
            - More than 10 Petabytes of data
            - Works with more than 1TB of semi-structured or structured data
        - Applications
            - Operational applications
            - Analytical applications
            - Time series or has natural semantic ordering
            - Machine learning algoirthms on data
        - BigTable != BigQuery
            - BigQuery - SQL, Google Cloud Data Warehouse
    - Comparing Storage Options
    - Lab - Getting Started with Cloud Storage and Cloud SQL
        - Create Bucket with GSUTIL in Cloud Shell
            - export LOCATION=US
            - gsutil mb -l $LOCATION gs://$DEVSHELL_PROJECT_ID
            - gsutil cp gs://cloud-training/gcpfci/my-excellent-blog.png my-excellent-blog.png
            - gsutil cp my-excellent-blog.png gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png
            - gsutil acl ch -u allUsers:R gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png

5. Containers in the Cloud
    - Introduction to Containers
        - Containers group your code and its dependencies
        - Concepts
            - Invisible box around code and its dependencies
            - Has limited access to its own partiion of the file system and hardware
            - Only requires a few system calls to create and start as a process
            - Only needs an OS kernel that supports containers and a container runtime, on each host
            - It scales like PaaS, but gives nearly the same flexibility as IaaS
            - Scale by duplicating single containers
            - Scale an application with multiple conjtainers
            - Modular, easily deployable, and scale independently across a group of hosts
    - Kubernetes and Google Kubernetes Engine
        - Kubernetes
            - Manages containerized workloads
            - Open-source platform for managing containerized workloads and services
            - Makes it easy to orchestrate many containers on many hosts, scale them as microservices, and deploy rollouts and callbacks
            - Is a set of APIs to deploy containers on a set of nodes called a cluster
            - Divided into a set of primary components that run as the control plane and a set of nodes that run containers
            - You can describe a set of applications and how they should interact with each other and Kubernetes figures how to make that happen
            - Rolling updates can be triggered on the command line or by updating the configuration file
        - Kubernetes Components
            - Container - application
            - Pods - lowest level, contains multiple containers
            - Node - environment for running and managing containers
            - Control Plane - manages the cluster
            - Deployments - replicas of a specific pod, can be scaled on command, can be modified by changing configuration files
            - Load Balancer - routes traffic to pods
            - Service - ingress and egress from pods
            - Configuration File - describe how to create and scale deployments, declarative
        - Google Kubernetes Engine
            - Google's managed Kubernetes service
            - Can create customized Kubernetes clusters
            - Benefits
                - Load balancing for Compute Engine instances
                - Node pools to designate subsets of nodes within a clsute 
                - Automatic scaling
                - Automatic upgrade
                - Node auto-repair
                - Logging and monitoring
            - Commands
                - gcloud container clusters create k1
    - Hybrid and Multi-Cloud
        - Anthos - hybrid cloud management - cloud.google.com/anthos
    - Lab - Google Cloud Fundamentals: Getting Started with GKE

6. Applications in the Cloud
    - App Engine
        - Full Range of Services
            - NoSQL Datastores
            - Memcache
            - Load Balancing
            - Health Checks
            - Application Logging
            - User Authentication API
        - Interfaces
            - Use Languages, Libraries, and Frameworks
            - Eclipse, IntelliJ, Maven, Git, Jenkins, PyCharm
        - Pricing
            - Only pay for the resources used
        - Versions
            - Standard
                - Persistent storage with queries, sorting, and transactions
                - Automatic scaling and load balancing
                - Asynchronous task queues for perfomring work outside the scope of a request
                - Scheduled tasks for triggering events at specified times or regular intervals
                - Integration with other Google Cloud services and APIs
                - Requirements
                    - Use specific versions of Java, Python, PHP, Go, NodeJS, and Ruby
                    - Application must conform to sandbox constraints that are dependent on runtime
            - Flexible
                - Uses custom containers
                - Instances are health checked, healed, and co-located
                - Critical, backward-compatible updates are automatically applied to the underlying operating system
                - VM instancees are automatically located by geographical region according to the settings in your project
                - VM instances are restarted on a weekly basis
                - Use Cases
                    - Microservices
                    - Authorization
                    - SQL and NoSQL Database
                    - Traffic Splitting
                    - Logging
                    - Search
                    - Versioning
                    - Security Scanning
                    - Memcache
                    - Content Delivery Networks
                - Advantages
                    - Custom configurations and libraries
                    - Customize runtime and operating system of your virtual machine
                    - Customize or provide runtimes by supplying a custom Docker image or a Dockerfile
    - Google Cloud API Management Tools
        - API Management Tools
            - Cloud Endpoints
                - Distributed API management system
                - Provides an API console, hosting, logging, monitoring, and other features
                - Use with any APIs that support the OpenAPI specification
                - Supports applications running in App Engine, Google Kubernetes Engine, and Compute Engine
                - Clients include Android, iOS, and Javascript
            - API Gateway
                - Backend implemtations can vary
                - Managed by Google
                - Provide secure access to your backend services through a well defined REST API
                - Clients consume your REST APIs to implement standalone apps
            - Apigee Edge
                - Specific focus on business problems, like rate limiting, quotas, and analytics
                - Many Apigee Edge uysers provide a software service to other companies
                - Backend services for Apigee Edge don't need to be in Google Cloud
    - Cloud Run
        - A managed compute platform that can run stateless containers
        - Serverless, removing the need for infrastructure management
        - Built on Knative, an open API and runtime environment built on Kubernetes
        - Can automatically scale up and dowm from zero almost instantaneoulsy, charging only for the resources used
        - Workflows
            - Write -> Build and Packaage in Registry -> Deploy to Cloud Run
            - Write Code -> Deploy to Cloud Run using Buildpacks
        - Cloud Run handles HTTPs serving for you
        - Only charged when your container is handling requests
        - Cloud Run can run any binary that is Linux 64 bit compatible\
    - Lab: Hello Cloud Run

7. Developing and Deploying in the Cloud
    - Development in the Cloud
        - Cloud Source Repositories - repositories support compute products
        - Cloud Functions - handle application events e.g. convert format, convert thumbnail size, store new files
            - Lightweigfht, event based, asynchronous compute solutions
            - Allow you to create small, single purpose functions that respnd to cloud events without the need to manage a server
            - Use these functions to construct applications from bite sized business logic and connect and extend cloud services
            - Billed to the nearest 100th milliseconds, and only while your code is running
            - Supports writing source code in a number of programming languages
            - Events from Cloud Storage and Pub/Sub can trigger CLoud Functions asynchronously, or use HTTP invocation for synchronous execution
    - Deployment: Infrastructure as Code
        - Pathways
            - Manually set up environment in Google CLoud
        - Terraform
            - Terraform Templates
    - Lab: Automating the Deployment of Infrastructure Using Terraform
        - TODO:

8. Monitoring in the Cloud
    - Monitoring
        - The foundation of product reliability
        - Reveals what needs urgent attention
        - Shows trends in application usage patterns
        - Helps improve an application experience
        - Real Time System Information
            - Query counts and types
            - Errors counts and types
            - Processing times
            - Server lifetimes
        - Goal
            - Ensure continue system operations
            - Uncover trend analyses over time
            - Build dashboards
            - Alert personnel when systems violate predefined SLOs
            - Compare systems and systems changed
            - Provide data for improved incident response
        - Product Reliability Triangle
            - Monitoring
            - Incident Response
            - Root Cause Analysis/Post Mortems
            - Testing
            - Capacity Planning
            - Developing
            - Product
        - Product Needs
            - Continual improvement, dashboards, automated alerts, monitoring tools
        - Golden Signals
            - Latency, Traffic, Saturation, Errors
    - SLIs, SLOs, and SLAs
        - Service Level Indicator - carefully selected monjitoring metrics that measure one aspect of a service's reliability
        - Service Level Objective - combines a service level indicator with a target reliability and will generally be somewhere just short of 100%
            - Specific, Measurable, Achievable, Relevant, and Time-Bound
        - Service Level Agreement - commitments made to your customer that your systems and applications will only have a certain amount of down time
    - Integrated Monitoring, Logging, Alerting, and Debugging
        - Cloud Operations
            - Capture Signals
                - Metrics - apps, services, platform, microservice
                - Logs - apps, service, platforms
                - Trace - apps
            - Visualize and Analyze
                - Dashboards
                - Metrics Explorer
                - Logs Explorer
                - Service Monitoring
                - Health Checks
                - Snapshot Debugger
                - Profiler
            - Manage Incidents
                - Alerts
                - Error Reporting
                - SLO
            - Monitoring
                - BigQuery - queries in flight, scanned bytes billed, slots used
                - Cloud Run - cpu utilization, billable time, memory utilization
                - Compute - cpu and memory utilization, disk throughput
                - Applications - OpenTelemetry custom metrics
        - Cloud Logging
            - Cloud Audit Logs
            - Agent Logs
            - Network Logs
            - Service Logs
        - Error Reporting - counts, analyzes, and aggregrates the crashes in your running cloud services
        - Cloud Trace - tracing system that collects latency data from your distributed applications and displays it in the google console
        - Cloud Profiler - sues statistical techniques and low impact instrumentation to provide a complete CPU and heap picture of an application without slowing it down