Fundamentals of Linux
    1.History
      a. What is Linux?
        - An operating system, a collection of software that manages hardware resources and provides an environment where applications can run.
        - A Kernel, core of the OS, sits between hardware and applications.
        - Created in 1991 by Linus Torvalds, 1st version released in 1994
        - Free Open Source Software
      b. What is a Linux Distribution?
        - A Kernel plus additional software that can be changed
        - Examples: DistroWatch.com
          - Red Hat Enterprise License - CentOS derivative
            - Banks, Airlines, Telecoms, Healthcare
          - Fedora
          - Ubuntu
            - Startups, SaaS, Social Networks, Cloud Based
          - Debian
        - Distro/Flavor are common terms
      c. Why Linux?
        - Runs on many hardware platforms
        - Small footprint
        - Stable, Reliable, Secure
        - Great for Servers
        - FOSS
    2.SSH
        a. What is SSH?
            - Secure Shell, software package that enables secure system administration and file transfers over insecure networks
            - Invented by Tatu Ylonen
            - Windows Client - PuTTY
        b. Connecting
            - ssh remoteComputer
            - ssh username@remoteComputer
            - ssh -l username remoteComputer
        c. Commands
            - ssh hostname command
            - ssh-keygen, tool for creating new authentication key pairs for ssh
                - ssh-keygen -t [rsa, dsa, ecdsa, ed25519] -b [rsa: 2048, 4096] [ecdsa: 256, 384, 521]
                    - -t is algorithm and -b is key size
                - ssh-keygen -f ~/path -t rsa -b 2048
            - ssh-copy-id, copy public key to server and installed in authorized_keys file
                - ssh-copy-id -i ~/path user@host
            - ssh-agent, helper program to implement single sign-on
                - eval `ssh-agent`, starts ssh-agent
                - echo $SSH_AGENT_SOCK,check if ssh-agent has been used
            - ssh-add, adds identities to agent
                - ssh-add, add default files to agent
                    - ~/.ssh/id_rsa, .ssh/id_dsa, ~/.ssh/id_ecdsa,~/.ssh/ed25519, ~/.ssh/identity
                - ssh-add -l, lists private keys currently accessible to the agent
         d. Additional Commands
            - scp, a program for copying files between computers
                - scp file host:path, copy to
                - scp host:path file, copy from
                - scp -r directory host:path
            - sftp, secure file transfer protocol
                - sftp host
            - sshd, OpenSSH server process
    3. Directory Structure
        a. Common Directories
            - / , Root, the top of the file system hierarchy
            - /bin, Binaries and other executable programs
            - /etc, System configuration files
            - /home, User home directories
            - /opt, Optional or third party software
            - /tmp, Temporary space, typically cleared on reboot
            - /usr, User related programs
            - /var, Variable data, most notably log files
        b. Other Important Directies
            - /cdrom, Mount point for CD-ROMs
            - /cgroup, Control Groups hierarchy
            - /boot, files needed to boot the operating system
            - /dev, device files, typically controlled by the operating system and the adminstrators
            - /export, shared file systems
            - /lib, System libraries
            - /media, Used to mount removable media like CD-ROMs
            - /mnt, Used to moutn external files systems
            - /proc, Provides info about running processes
            - /sbin, System administration binaries
            - /selinux, Used to display information about SELinux
            - /srv, Contains data which is served by the system
            - /srv/www. Web server files
            - /srv/ftp, FTP files
            - /sys, Used to display and sometimes configure the devices known to the linux kernel
            - /usr/bin, Binaries and other executable programs
            - /user/local, locally installed software that is not part of the base operating system
        c. Application Directory Structures
            - usr/local/programname/path
            - opt/organizationname
    4. Shell
        a. What is the shell?
            - Default user interface to a linux system
            - Start a terminal to gain access to a shell if you start in a GUI
            - A program that accepts your commands and executes those commands
            - Often times more powerful
            - Shell Prompt
                - username@linuxSystem
                - $ using as normal user
                - # super user or root
                - current directory
                - ~ represents home directory
        b. How do you access the shell?
            - Open the terminal...
        c. What is the super user account?
            - A powerful account
            - Access restricted to system administrators
            - Access may be required to install, start, or stop an application
            - Day to day will be performed by a normal account
    5. PATH
        a. What is Path?
            - An environment variable
            - Controls the command search path
            - Contains a list of directories
    6. Permissions
        a. What are file permission types?
            - Symbolic
            - Numeric/Octal
            - File
            - Directory
        b. [-dl] u[---] g[---] o[---]
            - 1st dash is file
            - d is directory
            - l is symbolic link
            - u is user or owner
            - g is group
            - o is other
        c. File Permissions
            - r = Read, can view its contents e.g. cat
            - w = Write, can modify the file
            - x = Execute, can run that file as a program
        d. Directory Permissions
            - r = Read, allows files names in the directory to be read (4)
            - w = Write, allows entries to be modified within the directory (2)
            - x = Execute, allows access to contents and metadata for entries (1)
        e. Permission Categories
            - User
            - Group
            - Other
            - All
        f. Groups
            - Every user is in at least one group
            - Users can belong to many grousp
            - Groups command
        g. Changing Permissions
            - chmod, change mode command
            - ugoa, user cateogry
            - +-=, add/subtract/set
            - rwx, Read/Write/Execute
    7. Viewing and Editing Files
        a. Ways to Display
            - cat, display contents
            - more, browse through a text file
            - less, more features than more
            - head, output the beginning of a file
            - tail, output the tail of a file
        b. Vi
            - Command Mode and Navigation (ESC)
                - k, up one line
                - j, down one line
                - h, left one character
                - l, right one character
                - w, right one word
                - b, left one word
                - ^, beginning of the line
                - $, end of the line
            - Insert Mode (i, I, a, A)
                - i, insert at the cursor position
                - I, insert at the beginning of the line
                - a, append after the cursor position
                - A, append at the end of the line
            - Line Mode
                - :w, saves the file
                - :w!, forces the file to be saved
                - :q, quit
                - :q!, quit without saving changes
                - :wq!, write and quit
                - :x, same as :wq
                - :n, positions the cursor at line n
                - :$, position cursor at the last line
        c. Emacs
            - emacs myFile
    8. Finding Files and Directories
        a. find
            - find [path] [expression]
        b. locate (not in real time)
            - locate pattern
    9. Deleting, Copying, Removing, Renaming Files, Sorting, Archiving, Compressing
        a. Removing Files
            - rm file, remove file
            - rm -r dir, remove directory and content recursively
            - rm -f file, force removal
        b. Copying
            - cp source_file destination_file
            - cp source_file1 source_filen dest_dir
            - cp -r source_directory destination
        c. Move or Rename
            - mv
            - mv source destination
            - mv firstName newName
        d. Sort
            - sort file
            - sort -u file, unique
            - sort -r file, reverse
        e. Tar
            - c, creates a tar archive
            - x, extracts file from the archive
            - t, displays table of contents
            - v, verbose
            - z, use compression
            - f, file
        f. Compressings
            - gzip file
            - gunzip file 
        g. Disk Usage
            - du file
    10. Wildcarding
        a. What
            - Chararcter or string used for pattern matching
            - Globbing expands the wildcard pattern into a list of files and or directories
        b. *
            - matches zero or more characters
            - *.txt, *.html, *.css, a*, a*.txt
        c. ?
            - matches exactly one character
            - a?
            - ?.txt
        d. []
            - Character class
            - ca[nt]* matches can, cat, candy, catch
            - [!aeiou]* matches any files that don't start with a vowel
            - [a-g]* range
            - [[:alpha:]]
            - [[:alnum:]]
            - [[:digit:]]
            - [[:lower:]]
            - [[:space:]]
            - [[:upper:]]
        e. \
            - escape character
    11. Input, Output, and Redirection
        a. Types
            - Standard Input, stdin 0
            - Standard Output, stdout 1
            - Standard Error, stderr 2
        b. Redirection
            - > Redirects standard output to a file, overwrites
            - >> Redirects standard output to a file, appends
            - < Redirects input from a file to a command
            - >/dev/null remove useless
    12. Comparing Files
        a. diff
            - compare two files
            - < first file
            - - - - separator
            - > second file
        b. sdiff
            - side by side comparison
        c. vimdiff
            - highlight differences in vim
    13. Searching and Pipes
        a. Grep
            - grep pattern file
            - i, case insensitive
            - c, number of occurences in a file
            - n, precede output with line numbers
            - v, invert match
        b. Pipe
            - command-output | command-input
    14. Customizing the shell prompt
        a. PS1 environment variable, echo $PS1
            - \d, Date in "Weekday Month Date"
            - \h, Hostname up to the first period
            - \H, Hostname
            - \n, Newline
            - \t, Current time in 24HR HH:MM:SS
            - \T, Current time in 12HR HH:MM:SS
            - \@, Current time in 12HR AM/PM
            - \A, Current time in 24HR HH:MM
            - \u, username of the current user
            - \w, Current working directory
            - \W, basename of the current working directory
    15. Environment Variables
        a. Structure
            - Name/Value Pars
            - KEY=value
        b. Create
            - export VAR=value
        c. View
            - printenv VAR
            - printenv
            - echo $VAR
        d. Remove
            - unset VAR
    16. Process and Job Control
        a. List Processes
            - ps (current session)
                - -e, all
                - -f, format listing
                - -u username, displays usernames processes
                - -p pid, display process specific information 
            - top
            - htop
        b. Foreground vs. Background
            - Foreground, blocks entering further commands
                - kill with ctrl-c
                - suspend ctrl-z
                - fg [%num]
            - Background, doesn't block
                - bg [%num]
            c. Launch Background Processes
        d. Kill Processes
            - kill
            - kill pid
            - kill signal pid
