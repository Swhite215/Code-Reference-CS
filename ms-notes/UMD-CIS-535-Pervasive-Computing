Advanced Networking and Distributed Systems CIS 537

1. 01/22/2024 - Summary of Lecture
- Terminology
    - Network - group of computers and devices that are connected by communication infrastructure
        - Local Area Network
        - Wireless Local Area Network
        - Wireless Personal Area Network
        - Wireless Body Area Network
        - Metropolitan Area Network
    - Topologies - mesh, bus star, ring
    - Protocols
        - Building blocks of a network architecture
        - Formal standards and policies enabling communication
        - Institure of Electrical and Electronics Engineers
    - Key Questions
        - Who initiates communication?
        - What is the order of communication?
        - How long can I talk?
        - How loud can I speak?
        - Do I have something specific to say at beginning or end?
        - Do I have meta data to add?
        - What do I do if I get interrupted?
        - What do I do if I was not understood?
        - Client/Server Model - HTTP, SMTP, ICMP, SSH, DNS
    - Open System Interconnection Model
        - Physical - physical/electrical characteristics, binary data, cable, connectors, voltage, signal duration
            - Low frequency = longer wavelengths, low data rates, long distances, penetrate objects
            - High frequency = shorter wavelengths, high data rates, short distances, line of sight
            - Wavelength = Speed of Light / Frequency
        - Propogation Behaviors
            - Ground Wave < 2MHz - follow earth's surface, long distances
            - Sky Wave 2-30MHz - reflectd at ionosphere around the world
            - Line of Sight >30MHz - straight lines, waves are bent at atmosphere due to refraction
            - Effects - shadowing, reflection, refraction, scattering, diffraction
        - Signal Propogation Ranges
            - Transmission Range - communication possible, low error rate
            - Detection Range - detection possible, no communication possible
            - Interference Range - signal may not be detected, signal adds to background noise
        - Multipath Propogation
            - Signal may take different paths between sensor and receiver due to reflection, scattering, and diffraction
        - Modulation
            - Digital - digial data is translated into an analog signal
            - Amplitude Key Shifting - amplitude is varied to represent binary data
            - Frequency Key Shifting - frequency is varied to represent binary data (Binary or Multiple Frequency)
            - Amplitude Modulation AM - amplitude, measure of amount of energy transferred by a wave, distance between peak or trough and equilibrium
            - Frequency Modulation FM - number of waves that pass a certain point in a certain period of time
            - Phase Modulation
    - Data - frames, Media Access Control sublayer
        - How/when medium is accessed for transmission, frames, error detection/correction
        - Multiplexing
            - Space Multiplexing - different paths or channels for each signal
            - Time Multiplexing - different interval, each signal assigned to an interval
            - Frequency Multiplexing - different frequencies, each signal assign to a frequency
            - Code Multiplexing - assign unique code to channel or user, receivers uses code to extract desired information
        - Ethernet
            - Local Area Network technology
            - Carrier Sense Multiple Access, Collision Detection
        - Wireless Transmissions
            - Signal = Signal to Interference plus Noise Ration
            - Signal Power - decreases as distance increases
            - Terminals
                - Hidden Terminal (A -> B <- C) - C does not hear A, and A cannot hear C, but C can interfere with A at B and should NOT transmit
                - Exposed Terminal (Y <- X - A -> B) - X hears A and wants to Transmit to Y, it cannot interfere with A at B and should transmit
            - 802.11 Wireless
                - Carrier Sense Multiple Access Collision Avoidance
                    - Sender Emit Request to Send RTS
                    - Receiver Emits Clear to Send CTS
                    - Others Silenced
                    - Sender Emits
                - Exponetial Backoff
                    - Wait random time before transmitting, if collision, exponential backoff, once transmit, reset rand to 0
    - Network - Internet Protocol, addressing and routing
        - Internet Protocol
        - Address and Routing - Sender/Receiver IP Addresses
            - 32bit hierarchical address space e.g. 128.100.11.156
                - Network ID
                - Host ID
            - IPv4
                - Class A - Network.Host.Host.Host
                - Class B - Network.Network.Host.Host
                - Class C - Network.Network.Network.Host
            - IPv6
                - 128 Bits
                - 16 Byte Hexadecimal
        - Routers
            - Consume source and destination IP address
            - Route to Next Hop dependening on destination IP address
    - Transport - User Datagram Protocol (UDP), Transmission Control Protcool (TCP)
        - Port - which application on a specific computer
        - User Datagram Protocol - unreliable, lost or out of order packets
        - Transmission Control Protocol - reliable, in order packet delivery
            - Adds flow control and congestion control
    - Session - authentication, management
    - Presentation - data translation, formatting, encryption, compression
    - Application - interface between user applications and lower network services
    - TCP/IP Model
        - Application maps to Application, Presentation, Session
        - Transport maps to Transport
        - Network maps to Network
        - Network Interface maps to Data Link and Physical

2. Mobile Application Development
    - Specifications
        - List of requirements that project/product must meet - WHAT
    - Application Design - Sketch, Wireframe, Mockup, Prototype
    - Android History
        - OS - linux based, open soruce, multi user operating system - Android Inc by Andy Rubin
    - Android Architecture
        - Android Framework
        - Android API
        - Android Apps
        - System API
        - System Services
        - HAL
        - Android Runtime - ART
            - Application runtime environment used by Android OS, translates bytecode into native instructions
        - System Services and Daemons
        - Linux Kernel
    - Android Java Compilation
        - Source Code -> Java Compiler -> Byte Code -> Java Virtual Machine -> Native Machine Code
    - Android Fundamentals
        - APK - Android Package
        - Components
            - Activity - single focused thing a user can do, entry point for an app's interaction with the user
            - Service - component that performs long running operations in the background, no user interface
            - Content Provider - manages access to a central repository of data
            - Broadcast Receiver - receives and handles broadcast intents
        - Manifest File
            - App Components, Permissions, API Level, HW/SW Features, API Libraries
                - <Activity>, <Service>, <Provider>, <Receiver>
        - Multiple Entry Points - one component can start another
        - Intent
            - Activates activities, services, and broadcast receivers - startActivity(), startService, sendBroadcast()
            - Messaging object you can use to request an action from another app component
            - Explicit Intent - which component of application will satisfy the intent
            - Implicit Intent - declare a general action to perform, which allows a component from another app to handle it
                - Examples: View Map, or Open Browser
            - Receiving Intent - specify an intent-filter
        - Concepts
            - Process - running instance of a program
                - Address Space - stack, heap, data, code
                - States - New, Ready, Running, Waiting, Terminated
            - Program - instructions
            - Thread - unit of execution within a process, share same virtual memory address space
                - Default - all components of an App run in same thread and same process
                - Can run components in different processes and create multiple threads per process
                - Main Thread - created when application is launched
                - Worker Thread - used to make UI thread light weight and responsive, cannot access UI toolkit elements
                - 
            - Inter-Process Communication - shared memory, signals, messaging
            - Process Hiearchy
                - Foreground - ongoing activities
                - Visible - not in Foreground but visible\
                - Service - concurrent
                - Background - not visible
                - Empty - lowest priority
            - App Responsive
                - Questions
                    - How big a task should we do in UI thread?
                    - How big a task can we do in UI thread?
                    - What is the alternative?
                    - What is the limitation of the alternative?
                - Lesson
                    - Do not block the UI thread i.e. dont run long running tasks
                    - Do not access the Android UI toolkit from outside the UI
                - Solutions
                    - Async Task (Deprecated) - perform blocking in worker and publish results to UI thread