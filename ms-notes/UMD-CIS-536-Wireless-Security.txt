Wireless Network Security CIS 546

1. 05/09/2024 - Summary of Lecture
    - Wireless Networks
        - Ubiqutous, easy, convenient, broad
        - Communication - radio waves
        - System - analog or digial radio -> transceiver -> amplify front end -> antenna
        - Characteristics
            - Decreased signal strength
            - Interferences from other sources
            - Multipath propogation
        - Access Techniques
            - Frequency Division Multiplexing
            - Time Division Multiplexing
            - Code Division Multiplexing
            - Space Division Multiplexing
            - Orthogonal Frequeny Division Multiplexing
        - Vulnerabilities
            - No physical protection, rather logical association
            - Broadcast nature of communication can be overheard, open participation
            - Subject to eavesdropping, bogus messages, replayed messages, illegitimate acess, denial of service
            - Subject to tracing, resource constraints, physical device insecurity (path)
    - What is Security?
        - Security - protection of assets from potential harm i.e. a vulnerable and valuable asset
        - Information Security - processes and practices used to secure the digital assets you wish to protect
        - Assets - hardware, software, data, resources, services, systems, networks
        - Questions
            - What are you trying to protect?
            - Why are you trying to protect it?
            - What is the value of the asset?
            - What are you protecting it from?
            - What constraints prevent you from protecting the asset?
        - Constraints 
            - Cost, undue impediment, nature of asset
    - General Threat Categories
        - Confidentitality, Integrity and Availability
            - Confidentiality - encryption
                - Secrecy of information i.e. hiding data
                - User privacy i.e. preventing inference
            - Integrity - protection from modification
                - Data remains in original form
                - Data has not been manipulated or tampered with
                - Message Authentication Code (MAC) - keyed hash/digest algorithms for data integrity on an insecure network
            - Availability - protection from failure
                - Systems and services are available to users when they need them
                - Systems and services are not withheld by unauthorized means
                - Attack - Denial of Service i.e. jamming e.g TCP SYN flooding
            - +Accountability - users accountable for actions
                - Internal users audit trails, logs, action recording
            - +Repudiation - preventing denial an action has been taken
                - Signatures for nonrepudiation of origin and delivery
        - Authorization and Access Control: AAA
            - Authentication - verify who someone is
            - Authorization - determine what someone can do
            - Accountabiity - record of actions
    - Threats to Wireless and Mobile Devices
        - Data Theft
            - Personally Identifiable Information, Personal Health Information
            - Sniffing - intercept and view wireless signals
            - Malware - control mobile development platform
            - Browser - vulnerable web browsers
            - Wireless Phishing - switch to fake screen for credential input
            - Lost or Stolen Devices
        - Device Control
            - Lily Padding - attacker moves from device to device to get to target
            - Jail Breaking
            - Policy or Device Circumvention
            - Ad-Hoc Connections
            - Endpoint Attacks
            - Bluetooth Hacks - Snarfing
            - NFC and Proximity Hacking
        - System Access
            - Denial of Service Attacks
            - Rogue Access Points - unauthorized access point plugged into a network to create a bypass
            - Evil Twin - access point is set to the same network SSID as a legitimate WLAN or hotspot
    - Risk Mitigation
        - Mobile Devices - locks, password, wipe, GPS location and tracking, data encryption
        - Defense in Depth
            - Physical Controls - doors, locks, cameras, gates, fences
            - Logical/Technical Controls - anti virus, firewalls, intrusion detection, intrusion prevention
            - Administrative Controls - security policies, processes, and procedures
            - Ring of Security - Policies, Physical, Perimeter, LAN, Host, Application
            - Layers
                - External Network Layer - servers exposed to the internet
                - Perimeter Network Layer - between external network layer and internal resources
                - Internal Network - where hosts reside
                - Application Server Network - inner security zone
                - Database Server Network - heart of data, tight security and access policies

2. 05/14/2024 - Summary of Lecture
    - Introduction
        - Security - prevent, detect, recover
        - Attack - deliberate attempt to compromise a system
            - Passive - attempt to learn information, difficult to detect and should be prevented
            - Active - attempt to alter system or affect operations, difficult to prevent and should be detected
        - Technical
            - Physical Protection
            - Algorithmic - cryptographic algorithms
        - Non-Technical
            - People education, procedure enforcement
    - Secure Data Communication
        - Confidentiality - aim to protect data from disclosure
            - Tool - encryption
        - Integrity - aim to detect modification and replay, assure data is as sent
            - Tool - Message Authentication Code and Digital Signature
    - Encryption
        - Classic Model - plaintext -> encrypted to cipher text using encryption key -> decrypted to plaintext using decryption key
            - Adversary - recover plaintexts from ciphertext, guess decryption key
            - Kerckoff's - assume adversary knows all details of E and D
        - Adversary Models
            - Ciphertext - adversary can see ciphertexts produced by the same encryption key
            - Known Plaintext - adversary can obtain plaintext-ciphertext pairs produced with same encryption key
            - Adaptive Chosen Plaintext - adversary can choose ciphertexts and obtain corresponding plaintexts
            - Related Key - adversary can obtain ciphertexts, or plaintext-ciphertext pairs produced with different encryption keys
        - Security of Encryption Scheme
            - Secure = computationally infeasible for the adversary to determine the target decryption key
            - Note - for many, no proof of security exists
            - Note - some are provably secure but those are often inefficient
        - Basic Schemes
            - Symmetric Key Encryption - can compute encryption from decryption and vice versa
                - Stream - operate on individual characters of plaintext
                - Block - process plaintext in large blocks of characters
            - Asymmetric Key Encryption - hard to compute decryption key from encryption key
                - Encryption key can be made public
        - Symmetric Encryption (K, K)
            - Block Cipher - operate on fixed length blocks of data, converting plaintext to cipher text by applying key
                - Traits
                    - Completeness - each bit of output block should depend on each bit of input and each bit of key
                    - Avalanche Effect - changing one bit of input, should change ~half of bits in output
                    - Statistical Independence - input and output should appear to be statistically independent
                - Design Criteria
                    - complex encryption built by composing several simple operations
                    - Data Encryption Standard
                        - Feistal Structure
                            - Split message
                            - Scramble half of message i.e. change order of bits i.e. permutation
                            - Take output and mix with other half
                            - Repeat for N Rounds
                            - Decrypt - perform process in reverse
                - Exhaustive Key Search Attack
                    - K can be recovered with 2^(k-1) operations
                    - Pattern if (X,Y) and (X', Y')
                        - Decrypt Y with K'
                        - If not X, throw away K'
                        - If X, check other pairs (X', Y')
                        - If K' does not work for one pair, throw away K'
                        - If K' works for all pairs, then K' is target key
                    - Best Practice - 128 bit key size
                - Algebraic Attacks
                    - Naive Exhaustive Key Search - system of equations
                    - Complementation Attacks - manipulate plaintext-ciphertext pairs, flipping bits to observe traits of key
                    - Differential Cryptanalysis - analyze differences between plaintext and ciphertexts to observe traits of algorithm or key
                    - Linear Cryptanalysis - analyze linear approximations between plaintext and ciphertexts
                - Block Cipher Modes of Operation - enhance effect of algorithm or adapting to application
                    - Electronic Codebook - each block of plaintext is encoded using same key
                        - Identical plaintext blocks result in identical ciphertext blocks
                        - Use - secure transmission of a single block of info
                    - Cipher Block Chaining - input to encryption is XOR of next block of plaintext and preceding block of cipher text
                        - Use - block data encryption and authentication
                    - Cipher Feedback - input is processed s bits at a time, previous ciphertext is input to encryption to produce output which is XORed with plaintext to produce ciphertext
                    - Output Feedback - input ia processed s bits at at time, previous keystream is encrypted
                    - Counter - each block of plaintext is XORed with an encrypted counter
            - Stream Ciphers - operate on individual characters
                - Characteristics - speed, limited or no error propogation
                - Conversion Modes for Block into Stream
                    - s-bit Cipher Feedback Mode - output of encryption process for previous block is fed into next block
                        - Use - stream data encryption, authentication
                    - s-bit Output Feedback Mode - output of encryption of input data from previous block is fed into next block
                        - Use - stream data over a noisy channel
                    - s-bit Counter Mode - counter value is encrypted versus input or previous cipher text
                        - Use - high speed network encryptions
                        - Advantages - hardware/software efficiency, preprocessing, random access, provable security, simplicity
            - XTS-AES - Data encryption for data stored in sector based devices, two pass tweakable
                - Requirements
                    - Data accessed independently from other, encryption performed in independent blocks, same plaintext encrypted to different ciphertexts at different locations
                - Tweakable Block Cipher
                    - Tweak - each data unit assigned a tweak, ensuring same position in two different data units will encrypt to two different ciphertext blocks
                - Advantages
                    - Efficiency - parallel encryption, simulataneous, random access, nonce and counter, solves stored data security concern
            - Vernam Cipher and One-Time Pad
                - Perfect Security
                - Encryption involves taking each character and performing XOR with corresponding bit of key, reverse to decrypt
                - Practical Limitation
                    - Can only use key once, how to distribute key, key must be as long as message
        - Asymmetric Encryption (K, K')
            - Characteristics
                - Computionally infeasible to compute K' from K
                - K can be made public due to the above fact
                - Public keys are not confidential but must be authenticated
            - Hard Problems
                - Factoring Problem - exponentially difficult, no known algorithms, lack of structure
                - Discrete Logarithm Problem
                - Diffie-Hellman Problem
            - RSA Encryption
                - Key Generation 0 p,q large primes i.e. 500 bits
                - Encryption - c = m^e mod n
                - Decryption - m = c^d mod n
                - Difficult - computing private key from public key is related to factoring, n is massive number i.e. hard to factor
                - Salting - addd random bytes e.g. PKCS#1
            - EIGamal Encryption Scheme
                - What....
        - Encryption in Practice
            - Public Key Encryption i.e. K,K' to exchange Symmetric Key i.e. G,G
            - Digital Enveloping
                - A Generates Symmetric Key
                - A Encrypts Data with Symmetric Key
                - A Encrypts Symmetric Key with B's Public Key
                - A Sends Envelope to B
                - B Decrypts Envelope with Private Key
                - B Decrypts Data with Symmetric Key
            - Message Integrity
                - Hash Function - map messages of arbitrary length to fixed length, collisions occur i.e. many to one mapping
                    - Ease of computation
                    - Strong Collision Resistance i.e. hard to find h(x) = h(y)
                    - One Way Property i.e. hard to find h(x) = y if y is a hash value
                    - Preimage - given a hash value, computationally difficult to find any message that hashes to that value
                    - 2nd Preimage - given an input, computationallly difficult to find another input that hashes to the same value
                    - Applications
                        - Integrity check for software
                        - Digital Signature Schemes
                        - Key Generation
                        - One Way Knowledge Proof
                - Birthday Paradox
                    - Probability any two people in a group share the same birthday quickly approaches one
                    - It is easier to find collisions than to find preimages or 2nd preimages
                - Message Authentication Codes
                    - Hash that takes as input a message and a secret key, produces a fixed size output of n bit called the MAC
                    - MAC Value = MAC(m, k), append MAC to message
                    - Properties
                        - Ease of computation
                        - Key non-recovery i.e. computationally infeasible to recover secret key k given text-MAC pairs
                        - Computaion Resistance - given (x, MAC(x)), infeasible to find (xi, MAC(xi)) for any new input
                    - Cipher Block Chaining Message Authentication Code - secure for fixed number of blocks messages
                    - Hash Based Message Authentication
                    - Digital Signatures - message authentication and nonrepudiation
                        - Generate K,K', sign using K', verify using K
                    - Hash and Sign Paradigm - hash message first and then apply public/private key operations
                        - Hash -> encrypt to form signature -> append signature to message
                        - Decrypt signature with public key, compare hash value with message to decrypted signature, if same then valid
                        - Schemes - Rivest Shamir, Adleman (RSA), Digital Signature Algorithm (DSA), Elliptic Curve DSA (ECDSA)

3. 05/16/2024 - Summary of Lecture
    - Key Distribution
        - Symmetric-key cryptographic primitives require that the communicating parties share a secret key
        - Categories - symmetric key distribution, public key distribution
        - Examples
            - Physical, purchase of phone with subscriber identity module and key, impractical
    - Symmetric Key Distribution
        - Physical
        - Existing Key - encrypt new key with old key and transmit
        - Public Key - encrypt key with public key and send
        - Key Distribution Center - use encrypted mututal connection to third party C
            - Hierarchy of Keys
                - Master Key - user uses master key to communicate with KDC to get a temporary session key
                - Session Key - temporary use key
                    - Limits available ciphertext
                    - Limit exposure caused by compromised key
                    - Create independence across sessions or applications
                    - Avoid long term storage of a large number of keys
                    - Lifetime
                        - Connection-Oriented Comunication - use one key for length of time connection is open
                        - Connection Less - not obvious how often session key needs to be changed
            - Sequence i.e. Needham-Schroeder Protocol
                - Pre-Work
                    - Ka shares Master Key with KDC
                    - Kb shares Master Key with KDC
                - Alice sends KDC request with Alice ID, Bob ID, and nonce
                - KDC generates message encrypted with Alice Key ad includes Session Key, Envelope for Bob with Session Key
                - Alice decrypts the message and gets symmetric key, Alice forwards Envelope to Bob
                - Bob decrypts envelop and gets symmetric key, sends message to Alice using symmetric key with a challenge
                - Alice decrypts message and looks at challenge, Alice sends back challenge value encrypted with session key
            - Denning-Sacco Attack
                - Suppose Eve recorded an old session where she knows the sessions key Ks
                - Eve impersonates Alice to force B to use an old Ks for the new session, sends envelope with old session key and Alice ID
                - Solution
                    - Add timestamps to limit usefulness/scope of old session keys.
    - Public Key Distribution
        - Problem - how does Bob know Alice's public key is actually hers?
        - Attack - Man in the Middle Attack
            - Adversary controls communication channel between Alice and Bob.
            - Adversary takes Alice's ID, encrypts it with their own public key, and forwards to Bob
            - Bob generates a session key and transmits to Adversary using the Adversary public key
            - Adversary decrypts the message and retrieves the session key
            - Adversary encrypts session key with Alice's key and sends to Alice
            - Adversary can now decrypt any message in the channel
            - Alice and Bob are not aware of the attack occurring
        - Solution - Digital Certificate
            - Task - associate an identity to a public key
            - Action - contains owner's public key and other info about owner. Signed by a Certificate Authority
            - Certificate authority verifies the owner and that the public key belongs to that owner
            - Setup Flow
                - Alice registers public key with CA
                - CA creates a certificate binding Alice to public key
            - Verification Flow
                - Alice sends certificate to Bob
                - Bob uses CA's public key to verify expiration revocation etc about certificate
                - Bob extracts Alice's public key from certificate
                - Bob use's Alice's public key to send a secure message
            - Server Certificates
                - Server must obtain certificate before communicating
                - Flow
                    - Browser sends request to server
                    - Server responds with certificate
                    - Browser verifies certificate and creates pre-master secret, sends keys to server using public key from certificate
                    - Server decrypts with private key and creates master secret and session keys from pre master secret
                    - Browser creates master secret and session keys from pre master secret
                - Padlock Icon and Certificate Information
                    - https:// Hyper Text Transfer Protocol Secure
                    - Icon - displays information about the digital certificate
            - X.509 Certificates
                - Standard which defines a framework for the provision of authentication services
                - Elements: version, serial number, signature algorithm identifier, issuer name, period of validity, subject name, public-key info, issuer identifier, subject identifier, extensions, signature
            - Certificate Verification
                - Is certificate authority trusted?
                - Is signature correct?
                - Has the certificate expired?
                - Has the certificate been revoked?
                - Is the entity correct?
            - Vulnerabilities
                - Trusting all certificates
                - Allowing all hostnames
                - Trusting many CAs
                - Mixed Mode/No SSL
            - Extended Validation SSL Certificate
                - Requires more extensive verification of a business
                - Browser can indicate to users they are connected to EV SSL
    - User Authentication - process of verifying an identity claimed by or for a system enttiy
        - Process
            - Present identity
            - Verify identity
        - General Means
            - Somemthing the individual knows e.g. password
            - Something the individual possesses e.g. keyfob
            - Something the individual is (static biometrics) e.g. fingerprint
            - Something the individual does (dynamic biometrics) e.g. voice
        - Weak Authentication
            - Static, guessable, sniffable, vulnerable to dictionary attacks
        - Strong Authentication
            - Prove identity by demonstrating knowledge of a secret known to be associated without revealing anything meaningful
        - Challenge-Response
            - Verifier prompts a challenge
            - Prover generates a cryptographic response specific to the challenge
            - Response
                - Private/public key encyption
                - Integrity mechanism e.g. MAC or hash
                - Digital signatures
        - Private Key or Symmetric Key Based Authentication
            - Protocol 1
                - Alice sends Bob a message "I am Alice"
                - Insecure, Eve can lie
            - Protocol 2
                - Alice sends Bob a message "I am Alice" in an IP Packet containing her source IP address
                - Insecure, Eve can spoof Alice's address
            - Protocol 3
                - Alice sends Bob a message "I am Alice" and sends her secret password
                - Insecure, Eve can intercept and replay later
            - Protocol 4
                - Alice sends Bob a message "I am Alice" and sends her encrypted password
                - Insecure, Eve can sniff packet and playback to Bob
            - Protocol 5
                - Alice sends message, Bob sends Alice a challenge, Alice must return R, encrypted with shared secret key
                - The challenge value must be un-predictable and must not be re-used by Bob
            - Man in the Middle
                - Eve impersonates Bob
                    - Alice to E, I am Alice
                    - Eve to Alice, B's challenge R
                    - Alice responds with Enc(R)
                - Eve Impersonates Alice
                    - Eve to Bob, I am Alice
                    - Bob to Eve, B's challenge R
                    - Eve to Bob, Enc(R) from above
            - Protocol 6
                - Alice to Bob, I am Alice
                - Bob sends challenge with Alice's public key
                - Alice uses symmetric key to encrypt response
                - Alice uses Bob's public key to send encrypted response
                - Bob decrypts response with private key, Bob decrypts response with symmetric key
        - Freshness and Liveness of Authentication Protocols
            - Freshness - message has not been used previously
            - Liveness/Timeliness - message was sent recently i.e. within timeframe
            - Nonce - one time random challenge
                - Requires good source of random numbers that are long and unpredictable and are not re-used
            - Timestamp - include date/timestamp in the message
                - Requires synchronized clocks which is hard in practice
        - Mutual Authentication
            - Previous - unilateral i.e. only Alice authenticated herself to Bob allowing Eve to impersonate Bob
            - Option A - two rounds of unilateral
            - Option B - piggyback to reduce to 3 rounds
                - Reflection Attack - Eve Impersonates B
                    - Alice sends to Eve A Identity and Challenge
                    - Eve initiates separate communication channel with B Identity and A's own challenge back to Alice
                    - Alice sends to Eve Encrypted Response and Value
                    - Eve sends back on the first channel the Encrypted Response and Value
                    - Alice sends back the response
                    - Eve on the second channel sends back the response
                - Solution
                    - Include direction, one key for sending, one key for responding
                    - include direction in response, add target to encrypted value
            - Option C - synchronized clock
                - Alice to Bob, Identity and Encrypted Time and Bob Identity
                - Bob to Alice, Encrypted Time + 1 and Identity
            - Option D - MAC
                - Alice to Bob - Identity and Challegne
                - Bob to Alice - Challenge Response and then HMAC of challenge response, own challenge, and A as target
                - Alice to Bob - HMAC challenge response, challenge response, and B as target

4. 05/21/2024 - Summary of Lecture
    - Mobile Computing
        - Mobile Communication
            - What - infrastructure or ad-hoc
            - Forms - cellular, wifi, bluetooth, RFID
        - Mobile Hardware
            - Mobile devices or components that recieve or access service of mobility e.g. laptops, smart phone, smart cards, wearables
        - Mobile Software
            - Program that runs on mobile hardware i.e. operating system and applications
            - Operating System - iOS and Android
        - Trends and Implications
            - Trends
                - Increasing reliance on personal mobile device
                - Increasing reliance on cloud infrastructure
                - Increasing use of mobile app vs web use
                - Unlimited amounts of applications, increased opportunities for gathering sensitive data
            - App Market Place
                - Central location to find, buy and download applications
                - Bettter protection than app install
                - Applications frequently require review before distribution
            - Phone Application - broad application, broad data collection, broad attack surface
        - Open Web Application Security Project Top Ten
            - Improper Platform Usage
            - Insecure Data storage
            - Insecure Communication
            - Insufficient Cryptography
            - Insecure Authorization
            - Client Code Quality
            - Code Tampering
            - Reverse Engineering
            - Extraneous Functionality
        - Mobile Platform Thread Models
            - Attack w/ Physical Access
            - System Attacks
            - Application Attacks
    - Mobile Malware Attacks
        - Examples
            - DroidDream (Android) - data theft and credential scavenging from +58 apps
            - Ikee (iOS) - worm capabiltiies, jailbroken phones
            - Zitmo - propogates via SMS via "security certificate", captures info from SMS to defeat two-factor authentication
        - Android Malware
            - 2015 - 61% increase year by year in mobile malware targeting android devices
                - 76% trojan, 15% adware, 7% theft
                - 3.5 million samples per year or 8,400 new instances per day
            - Recent Android Malware
                - AccuTrack, Ackposts, Acnetdoor, Adsms, Airpush/STopSMS, BankBot
            - Recent iOS Malware
                - AdThief/Spad, FindCall, Ikee, iKeyGuard, KeyRaider
                - AceDeceiver - successful malware infection for non jailbroken iOS devices
                    - FairPlay DRM Main in the Middle
                        - Malware on PC, installs malicious app in store, continues to work after app removed
    - Protection vs. Physical Attacker
        - Device Locking and Unlocking
            - Pin/Pattern -> Pin/Pattern per Application -> Logging of Pin/Pattern Failure e.g. photo with camera
        - Brute Force Password Attack
            - Offline
                - Steal password file -> try all i.e. Brute Force or Dictionary
                - Defense - hashed passwords
            - Online - Guessing
            - iOS PIN - ~20 minutes on iPhone 4 for a four data pin to guess
        - Attack on Patterns
            - Smudge Attacks - entering pattern leavees smudging
            - Entropy - people choose simple patterns with few strokes
         - Biometric Unlocking - fingerprint, face, no more secure than backup pin, cannot be changed
    - System Architecture and Defense: iOS Platform
        - iOS - created and developed by Apple, exclusive OS for devices
        - Diagram
            - Hardware
                - Device Key, Group Key, Apple Root Certificate
                - Crypto Engine
            - Software
                - Kernel
                    - Secure Enclave, Secure Element
                - Encrypted File System
                    - OS Partition
                    - User Partition
                    - App Sandbox - Data Protection Class
        - Security Guide
            - System Security - Protecting Mobile Platform
                - Secure Boot Chain - ensures integrity of operating system
                    - Boot Read Only Memory - Immutable
                        - Root of Trust - Apple Root Public Key
                    - Low Level Boot Loader - Run if Boot ROM signature is valid
                    - iBoot - Run if LLBL signature is valid
                    - iOS Kernel - Run if iBoot signature is valid
                    - Jailbreaking - exploit bugs in the chain to disable verification
                - Software Update
                    - Software Update - signed from Apple's servers, devices update version is tracked
                - Runtime Security - Sandbox
                    - Apps cannot access files stored by other applications
                    - Each application has a unique home directory
                    - Jailbreaking - install applications outside of sandbox, privilege esclation for the purpose of removing software restrictions
            - Encryption and Data Protection
                - Encryption
                    - Application Files
                        - Per-file Key - encrypts all file contents (AES-XTS)
                        - Class Key - encrypts per-file key
                        - File-System Key - encrypts file metadata, derived from hardware key
                        - All encryption/decryption occurs in the secure enclave
                    - Secure Enclave - hardware co-processor
                        - Encrypted memory, random number generator
                        - Stores keys, hardware UDID, crypto methods 
                    - Backup to iCloud
                        - Data Backup - encrypted data sent from device to iCloud
                        - Class Keys Backup - device migration to decrypt encrypted data backup files
            - App Security - App Isolation and Protection
                - Mandatory Code Signing
                    - Native Applications, 3rd Party Applications, Dynamic Libraries
                    - Problem: Charlie Miller's InstaStock - storing data in non-XN region...
                    - Problem: Masque Attack - could replace genuine app if both apps have the same bundle identiifier
                - Runtime Protection
                    - System Resources/Kernel shielded from user applications
                    - Application Sandbox
                        - Each application has its own sandbox and can only access its own data
                    - Code Generation Prevented
                - Application Data Protection
                    - Content of a file is encrypted with a per-file key, which is encrypted by the class key and stored in a file's meta data, which is encrypted with the file system key
            - Services Security
            - Network Security
            - Developer Kit Security
            - Secure Device Management
            - Apple Pay
            - Internet Services
            - User Password Management
            - Device Controls - User Level
                - Device Unlock and Locking
                    - Passcode
                        - Passcode Key - derived by hashing
                        - Flow
                            - passcode key is derived by hashing pascode and device ID
                            - hardware key + passcode key derives class key
                            - class key + file system key produces a file key
                            - file key hashes file contents
                        - Question
                            - Can attacker try all 6 digit passcode?
                            - 5.5 years to try all 6 digit pins
                            - 5 failed attempts => 1 min delay
                            - 9 failed attempts => 1 hour delay
                            - 10 failed attempts => erase phone
                    - Touch and Face ID
                        - Reality - provide easy access to device because they do not change
                        - Passcode can always be used instead
                        - How?
                            - Enclave stores skeleton/sketch with secure enclave key
                            - Fingerprint is detected
                            - Image is sent to enclave to check against fingerprint skeleton
                            - With Touch ID off, class key is deleted, requiring pin enter
                            - With Touch ID on, class key is stored in secure enclave and decrypted when fingerprint recognized
                                - Class key is deleted upon reboot, 48 hours of inactivity or five failed attempts
                        - How secure is touch ID?
                            - Easy to build fake finger...
                            - Fingerprints are not secret...
                            - More secure solutions exist... e.g. passcode + fingerprint
            - Privacy Controls - User Level
                - User controls which apps access location, microphone, and other services
            - Security Certification and Programs

5. 05/23/2024 - Summary of Lecture
    - Android Platform and Architecture
        - What is Android?
            - Popularity - most widely deployed smart phone operating system
            - Open Handset Alliance - 84 firms
            - History
                - Founded by Andy Rubin around 2003
                - Acquired by Google in 2005
                - 1st Phone HTC Dream or T-Mobile G1
                - Open Source Software Project
                    - Hardware vendors can customize software for their products
                    - Open marketplace for applications
            - Application Market
                - Self-signed applications i.e. by the developer
                - Application Permissions
                    - Installation Requests - Android 5.0 or earlier
                    - Runtime Requests - Android 6.0 or higher
                - Open Market
                    - Bad applications may show up on the market
                    - Shift focus from remote exploit to privilege escalation
        - Android Software Architecture
            - Linux Kernel
                - Drivers - display, keypad, camera, wifi, flash memory, audio
            - Hardware Abstraction Layer - allows android to be hardware agnostic i.e. same Android OS can run on different hardware
            - Libraries
                - WebKit, SQLite, Media Framework
            - Android Runtime
                - Core Libraries
                - Dalvik Virtual Machine
            - Application Framework
                - Activity Manager
                - Window Manger
                - View System
                - Content Providers
                - Package Manager
                - Telephone Manager
                - Resource Manager
                - Location Manager
                - Notification Manager
            - Applications
                - Home, Contacts, Phone, Browser, etc.
        - Android Applications
            - Structure - multiple separated modules or components communicating through Inter Component Communication
            - Language - Java, protected against standard buffer overflow attacks due to implicit bounding checking
    - Android Security Mechanisms
        - Discretionary Access Control - inherited from Linux
            - Restrict access to objects based on identity or group
            - Subject - read, write, and exec
            - Each application is assigned a unique (user id, group id) pair when installed
        - Sandboxing
            - DAC (user id, group id) enables sandbox
            - Applications are isolated from each other and from system resources
            - Application can only have access to files owned by itself or files explictly set as available
        - Permission Mechanism
            - Security sensitive interfaces are protected by standard Android permissions
            - Permissions are written in manifest file
            - Permissions are granted by user at install or runtime
            - At runtime, permission check is performed
            - Example - INTERNET, BLUETOOTH, SEND_SMS, READ_EXTERNAL_STORAGE
        - Accessibility for Components
            - Components can be public or private
            - Private - accessibly only by components within the same app
            - Public - reachable by other applications
        - Application Signing
            - Developers must sign their application to verify the origin of applications
            - Signature based permissions, applications from same developer share ID
            - Signature is validated at installation time
    - Privilege Escalation Attack and Defense
        - Issues with Security
            - Application Permissions - prevent sensitive data from unauthorized access
            - Issue - relies on user diligence and awareness
            - Permissions are granted all at once and only at installation time
            - Focus, circumvent permissions through permission attacks
        - Privilege Escalation Attack
            - What - application without privilege gets permission through another application
            - Applications A, B, and C
                - Application A is a bad application installed by the user
                - Application A has no granted permissions
                - Application A has CA1 and CA2
                - Application B is granted permission P1
                - Application B has CB1 and CB2, which can be accessed without permissions
                - CB1 and CB2 can access resources protected by P1
                - Application C has no granted permissions
                - Application C has CC1 and CC2
                - CC1 is protected by P1 and CC2 is protected by P2
                - Application A CA1 cannot access CC1, because it does not have P1
                - Application A CA1 can access CB1, because no permission.
                - Through CB1, CA1 can access CC1 , because CB1 can access components with P1
            - How?
                - Android permits any application to access an applicaitons public interface
                - 2011 - 872 apps, 320 have permissions for sensitive resources and at least one type of public component
                    - Found 15 permission re-delegation vulnerabilities in 5 core system applications
            - Power Control Widget
                - Third party applications can change protected system settings without requesting permissions
                - Attack
                    - Wthin an intent, send broadcast to SettingsAppWidgetProvider with particular data value to trigger permission action
                    - https://issuetracker.google.com/issues/36916759?pli=1
                - Solution
                    - IPC Inspector, at the OS level, performs privilege reduction on the application to reduce the callee's privilege after receiving communication from a less privileged application
    - Android Privacy and TaintDroid
        - Issue - privacy in the smartphone age
            - Increased risk of private data falling prey to snooping
            - Increased risk of private data collected
            - Increased risk of exposure to malware
        - Issue - non-sensitive data can reveal sensitive information e.g. accelerometer can infer keystroke, driving path, or floor level
        - TaintDroid - monitoring smartphone behavior
            - Step 1: Look inside applications to watch how they use privacy sensitive data
            - Challenges
                - Smartphones are resource constrained
                - Third party applications are entrusted with several types of privacy information
                - Context based privacy information is dynamic and can be difficult to identify
                - Applications can share information
            - Dynamic Taint Analysis - technique that tracks information dependencies from an origin
                - Phases
                    - Taint Source - mark data with label for sensitivity
                    - Taint Propogation - as tainted data moves, taint tags are propogated
                    - Taint Sink - monitor data to see if it reaches a potentially dangerous sink e.g. file system
                - Limitations - instruction level tracking, performance and granularity is a trade off
            - Tracking
                - Variable level tracking with untrusted application code
                - Message level tracking between applications
                - Method level track for system provided native libraries
                - File level tracking to ensure persistent information retains its taint marking
                - Requires updates to the operating system
            - Sample of 30 Applicaitons
                - Of 105 flagged TCP connections, only 37 clearly legitimate
                - 15 of the 30 shared physical location with an ad server, in no case was sharing obious to user
                - 7 applications sent device IMEI and 2 apps sent phone info to a remote server
    - Application Vulnerability
        - SSL Implementation Vulnerability
            - Secure Socket Layer - end to end user channel through a secure handshake process to prevent man in the middle
            - SSL has been shown completely  broken in many security applications and libraries
            - Trusting all certificates irrespective of who signed them or even for what subject they were issued
            - Allowing all hostnames - forgo check whether the certificate was issued for this hostname or not
            - Trusting many CAs
            - Mixed-Mode/NoSSL - no way for common app user to check whether a secure connection is being used, mixed connections in application
        - Webview Javascript Code
            - WebView - embedded browser inside smart phone applications, enables apps to interact with web content through an API
                - Apps invoke JavaScript code within web pages or insert their own
                - App monitors and intercepts events within web pages and respond to them
                - Javascript code in web pages invoke app interfaces
                - Weakend Web Security
                    - Trusted Computing Base at Client, we trust standalone browsers, can we trust apps with web views
                    - Browser Based Sandbox Protection, isoloate web pages from system and web pages of one origin from those of another, WebView allows you to punch through sandbox
                - Attacks from Malicious Web Pages
                    - Goal - compromise apps and their intended web applications, trick victim to load web pages into apps
                - Attacks from Malicious Apps
                    - Goal - attack website with application, e.g. javascript injection attack to pop a fake dialog to collect username and password
        - HTML5 Based App Vulnerability
            - Vulnerability - data and code can be mixed together allowing for code injection atacks e.g. when a string containing both data and code is processed
            - Code Injection Channels - internet, wifi, bluetooth, SMS, scanning, audio, video, picture
            - Order - Channel -> Payload -> Loaded in WebView -> Execute and Attack

6. 05/30/2024 - Summary of Lecture
    - Cellular Network Security
        - Elements of Wireless Networks
            - Wiresless Hosts - laptop, PDA, IP phone, wireless not necessarily mobility
            - Base Station - connected to wired network, responsible for sending packets between wired network and wireless hosts
            - Wireless Link - used to connect mobile to base station
            - Operation Modes 
                - Infrastructure (Cellular, Wi-Fi)
                    - Base station connects mobile into wired network
                    - Communication between hosts occurs through the base station
                    _ Dedicated Infrastructure
                - Ad-Hoc (MANET, FANET, Bluetooth)
                    - No dedicated infrastructure
                    - Peer to peer connections
                    - Nodes must organize themselves and determine routing among themselves
        - Cellular Networks
            - Architecture
                - Cell - geographic region
                - Base Station - provides services within the Cell
                - Mobile Hosts - attach to network through Base Station
                - Mobile Switching Center - connect cells to wide area net and manage call setup
                - Public Telephone Network and Internet
                - Links - fiber optic, ethernet, radio, etc.
            - Evolution of Network Standards
                - 1G
                    - Transmits voice
                    - Advanced Mobile Phone Service (AMPS)
                    - Two 25 MHz bands
                    - Unencrypted
                    - Analog
                - 2G
                    - Transmits voice
                    - Digital modulation techniques
                    - Encrypted
                    - Improved access channel
                    - Standards
                        - GSM - Global Systems for Mobile Communications
                        - Personal Digital Cellular
                        - CDMA
                        - NA-TDMA
                        - Digital-AMPS
                - 3G
                    - Transmits voice and data
                    - Code Division Multiple Access w/ Time Division Multiple Access for channel access
                    - UMTS - Universal Mobile Telecommunications Service - evolution of GSM
                - 4G
                    - Setting peak speed requirements at 100Mbps i.e. high mobility communication
                    - Setting peak speed requirements at 1GBps for low mobility communication
                - 5G
                    - More bandwidth, download speeds, upload speeds
            - Features
                - Wide coverage, large number of users, more capacity
                - High deployment costs - licensed bands, wired communication, billing, customer care
                - Trust Assumptions
                    - Security is not designed to defend against a malicious operator e.g. giving up privacy when you subscribe to cellular
                    - Security is designed to protect operators from malicious users and eavesdroppers
        - GSM Security (2G)
            - Security Requirement
                - Subscriber authentication - for billing
                    - SIM - Subscriber Identity Module
                    - Long term secret key shared between the subscriber and the home network operator
                    - Challenge response protocol
                    - Supports roaming without revealing long-term key to the visited networks
                - Confidentiality of communications and signaling over the wireless interface
                    - Encryption key shared betweeen the subscriber and the visited network is established with the help of the home network as part of the subscriber authentication protocol
            - Subscriber Identity Module
                - International Mobile Subscriber Identity - permanent user's identity
                - PIN
                - Temporary Mobile Subscriber Identity
                - Ki - user's secret key shared with home network
                - Kc - cipher key to encrypt communication data
                - List of last call attempts
                - List of preferred operators
                - Supplementary service data
            - Authentication Principle of GSM
                - Mobile devices enters a visitor network
                - Mobile device reads IMSI and sends to visitor network
                - Visitor identifies home network
                - Visitor forwards IMSI to home network
                - Home network will look up secret key by IMSI and creates (Session Key, Challenge, Challenge Response)
                - Triplet is sent to visitor network
                - Visitor network issues challenge to mobile station
                - If mobile station responds correctly, session key is provided
                - Rand and long term key used to encrypt response
                - Visitor network compares and authorizes if passed
            - Cryptographic Algorithms of GSM - Creating Triplet
                - RAND - random number generator to produce challenge
                - SRES - Challenge Response, generated from random number and user's secret key
                - Kc - cipher key, generated from random number and user's secret key
                - A3 - subscriber authentication algorithm (operator dependent)
                - A5 - cipher/decipher algorithm (standardized algorithm)
                - A8 - cipher generation (operator dependent)
            - Ciphering in GSM
                - Plaintext Sequence -> Encrypted by A5 produced from cipher key and frame number -> Ciphertext Sequence
                - Ciphertext Sequence -> decrypted by A5 produced from cipher key and frame number -> Plaintext Sequence
            - Protection of Subscriber's Identity
                - After authentication, visitor network generates a temporary mobile subscriber identifier
                - Encrypt TMSI with cipher key
                - Send TMSI to mobile phone
                - TMSI is used to identify a mobile phone in subsequent authentication
            - Conclusion
                - Subscriber Authentication
                - Confidentiality of Wirless Link Communications
                - Protection of Subscriber's Identity
            - Issues
                - Provides only unilateral authentication i.e. visitor network is not authenticated
                - Subject to fake base station atack
                - Authentication triplets can be used indefinitely
                - No integrity protection services
                - Short length of encryption
                - Weakness in A3 and A8
        - UMTS Security (3G)
            - Reuse fo 2nd Generation Principles
                - Removable hardware security module
                - Radio interface encryption
                - Limited trust of visitor network
                - Protection of end user identity
            - Updates
                - Deal with attacks from a faked base station
                - Deal with lack of encryption in some network
                - Data integrity
            - New Features
                - New service providers
                - Increased control for the user over service profile
                - Enhanced resistance to active attacks
                - Increase importance of non-voice services
            - Authentication in UMTS
                - When IMSI is sent to Home Network, Home Network generates authentication vector instead of triplet
                - Authentication Vector
                    - RAND - random number
                    - Expected Respose (XRES) - value derived from rand and secret key
                    - CK - cipher key used for encrypting communication between UE and network, derived from RAND and shared secret key
                    - IK - integrity key used to protect integrity of signaling between UE and network, derived from RAND and shared secret key
                    - Authentication Token - token that provides proof to the UE that the authentication challenge came from network it claims to be from
                - Verifying Authentication Token
                    - RAND and AUTN received by UE
                    - MAC is computed - stored secret key, received RAND, sequence number, and the AMF
                    - MACs are compared 
                    - Subscriber verifies SQN in correct range by decrypting
                    - New response generated and sent to visitor network
                    - Compare XRES and RES
                    - Ck and IK are computed and used for communication
                - Functions F1-F5 to create Authetnication Vector are operator specific
            - Signalling Integrity Protection Method
                - Mobile Station or Radio Network Controller - MAC-1
                    - MAC-1 dervies from integrity key, message, count, fresh random input, and direction
                - Receiver - XMAC-1
                    - Produce Expected MAC XMAC-1 and compares to MAC-1
                    - If equal, no modifications
            - Ciphering Method
                - Plaintext Block XOR with Keystream Block (Cipher Key + Bearer, Count, Length, Direction)
                - Reverse to Decrypt
            - Improvements
                - Crytopgrahic algorithms
                - Integrity of signalling messages
            - Issues
                - Visitor network can authenticate to home network but not subscriber, X to home but Y as subscriber