Wireless Network Security CIS 546

1. 05/09/2024 - Summary of Lecture
    - Wireless Networks
        - Ubiqutous, easy, convenient, broad
        - Communication - radio waves
        - System - analog or digial radio -> transceiver -> amplify front end -> antenna
        - Characteristics
            - Decreased signal strength
            - Interferences from other sources
            - Multipath propogation
        - Access Techniques
            - Frequency Division Multiplexing
            - Time Division Multiplexing
            - Code Division Multiplexing
            - Space Division Multiplexing
            - Orthogonal Frequeny Division Multiplexing
        - Vulnerabilities
            - No physical protection, rather logical association
            - Broadcast nature of communication can be overheard, open participation
            - Subject to eavesdropping, bogus messages, replayed messages, illegitimate acess, denial of service
            - Subject to tracing, resource constraints, physical device insecurity (path)
    - What is Security?
        - Security - protection of assets from potential harm i.e. a vulnerable and valuable asset
        - Information Security - processes and practices used to secure the digital assets you wish to protect
        - Assets - hardware, software, data, resources, services, systems, networks
        - Questions
            - What are you trying to protect?
            - Why are you trying to protect it?
            - What is the value of the asset?
            - What are you protecting it from?
            - What constraints prevent you from protecting the asset?
        - Constraints 
            - Cost, undue impediment, nature of asset
    - General Threat Categories
        - Confidentitality, Integrity and Availability
            - Confidentiality - encryption
                - Secrecy of information i.e. hiding data
                - User privacy i.e. preventing inferrence
            - Integrity - protection from modification
                - Data remains in original form
                - Data has not been manipulated or tampered with
                - Message Authentication Code (MAC) - keyed hash/digest algorithms for data integrity on an insecure network
            - Availability - protection from failure
                - Systems and services are available to users when they need them
                - Systems and services are not withheld by unauthorized means
                - Attack - Denial of Service i.e. jamming e.g TCP SYN flooding
            - +Accountability - users accountable for actions
                - Internal users audit trails, logs, action recording
            - +Repudiation - preventing denial an action has been taken
                - Signatures for nonrepudiation of origin and delivery
        - Authorization and Access Control: AAA
            - Authentication - verify who someone is
            - Authorization - determine what someone can do
            - Accountabiity - record of actions
    - Threats to Wireless and Mobile Devices
        - Data Theft
            - Personally Identifiable Information, Personal Health Information
            - Sniffing - intercept and view wireless signals
            - Malware - control mobile development platform
            - Browser - vulnerable web browsers
            - Wireless Phishing - switch to fake screen for credential input
            - Lost or Stolen Devices
        - Device Control
            - Lily Padding - attacker moves from device to device to get to target
            - Jail Breaking
            - Policy or Device Circumvention
            - Ad-Hoc Connections
            - Endpoint Attacks
            - Bluetooth Hacks - Snarfing
            - NFC and Proximity Hacking
        - System Access
            - Denial of Service Attacks
            - Rogue Access Points - unauthorized access point plugged into a network to create a bypass
            - Evil Twin - access point is set to the same network SSID as a legitimate WLAN or hotspot
    - Risk Mitigation
        - Mobile Devices - locks, password, wipe, GPS location and tracking, data encryption
        - Defense in Depth
            - Physical Controls - doors, locks, cameras, gates, fences
            - Logical/Technical Controls - anti virus, firewalls, intrusion detection, intrusion prevention
            - Administrative Controls - security policies, processes, and procedures
            - Ring of Security - Policies, Physical, Perimeter, LAN, Host, Application
            - Layers
                - External Network Layer - servers exposed to the internet
                - Perimeter Network Layer - between external network layer and internal resources
                - Internal Network - where hosts reside
                - Application Server Network - inner security zone
                - Database Server Network - heart of data, tight security and access policies

2. 05/14/2024 - Summary of Lecture
    - Introduction
        - Security - prevent, detect, recover
        - Attack - deliberate attempt to compromise a system
            - Passive - attempt to learn information, difficult to detect and should be prevented
            - Active - attempt to alter system or affect operations, difficult to prevent and should be detected
        - Technical
            - Physical Protection
            - Algorithmic - cryptographic algorithms
        - Non-Technical
            - People education, procedure enforcement
    - Secure Data Communication
        - Confidentiality - aim to protect data from disclosure
            - Tool - encryption
        - Integrity - aim to detect modification and replay, assure data is as sent
            - Tool - Message Authentication Code and Digital Signature
    - Encryption
        - Classic Model - plaintext -> encrypted to cipher text using encryption key -> decrypted to plaintext using decryption key
            - Adversary - recover plaintexts from ciphertext, guess decryption key
            - Kerckoff's - assume adversary knows all details of E and D
        - Adversary Models
            - Ciphertext - observer ciphertexts produced by the same encryption key
            - Known Plaintext - obtain plaintext-ciphertext pairs produced with same encryption key
            - Adaptive Chosen Plaintext - adversary can choose ciphertexts and obtain corresponding plaintexts
            - Related Key - adversary can obtain ciphertexts, or plaintext-ciphertext pairs produced with different encryption keys
        - Security of Encryption Scheme
            - Secure = computaitonally infeasible for the adversary to determine the target decryption key
            - Note - for many, no proof of security exists
            - Note - some are provably secure but those are often inefficient
        - Basic Schemes
            - Symmetric Key Encryption - can compute encryption from decryption and vice versa
                - Stream - operate on individual characters of plaintext
                - Block - process plaintext in large blocks of characters
            - Asymmetric Key Encryption - hard to compute decryption key from encryption key
                - Encryption key can be made public
        - Symmetric Encryption (K, K)
            - Block Cipher - operate on fixed length blocks of data, converting plaintext to cipher text by applying key
                - Traits
                    - Completeness - each bit of output block should depend on each bit of input and each bit of key
                    - Avalanche Effect - changing one bit of input, should change ~half of bits in output
                    - Statistical Independence - input and output should appear to be statistically independent
                - Design Criteria
                    - complex encryption built by composing several simple operations
                    - Data Encryption Standard
                        - Feistal Structure
                            - Split message
                            - Scramble half of message i.e. change order of bits i.e. permutation
                            - Take output and mix with other half
                            - Repeat for N Rounds
                            - Decrypt - perform process in reverse
                - Exhaustive Key Search Attack
                    - K can be recovered with 2^(k-1) operations
                    - Pattern if (X,Y) and (X', Y')
                        - Decrypt Y with K'
                        - If not X, throw away K'
                        - If X, check other pairs (X', Y')
                        - If K' does not work for one pair, throw away K'
                        - If K' works for all pairs, then K' is target key
                    - Best Practice - 128 bit key size
                - Algebraic Attacks
                    - Naive Exhaustive Key Search - system of equations
                    - Complementation Attacks - manipulate plaintext-ciphertext pairs, flipping bits to observe traits of key
                    - Differential Cryptanalysis - analyze differences between plaintext and ciphertexts to observe traits of algorithm or key
                    - Linear Cryptanalysis - analyze linear approximations between plaintext and ciphertexts
                - Block Cipher Modes of Operation - enhance effect of algorithm or adapting to application
                    - Electronic Codebook - each block of plaintext is encoded using same key
                        - Identical plaintext blocks result in identical ciphertext blocks
                        - Use - secure transmission of a single block of info
                    - Cipher Block Chaining - input to encryption is XOR of next block of plaintext and preceding block of cipher text
                        - Use - block data encryption and authentication
                    - Cipher Feedback - input is processed s bits at a time, previous ciphertext is input to encryption to produce output which is XORed with plaintext to produce ciphertext
                    - Output Feedback - input ia processed s bits at at time, previous keystream is encrypted
                    - Counter - each block of plaintext is XORed with an encrypted counter
            - Stream Ciphers - operate on individual characters
                - Characteristics - speed, limited or no error propogation
                - Conversion Modes for Block into Stream
                    - s-bit Cipher Feedback Mode - output of encryption process for previous block is fed into next block
                        - Use - stream data encryption, authentication
                    - s-bit Output Feedback Mode - output of encryption of input data from previous block is fed into next block
                        - Use - stream data over a noisy channel
                    - s-bit Counter Mode - counter value is encrypted versus input or previous cipher text
                        - Use - high speed network encryptions
                        - Advantages - hardware/software efficiency, preprocessing, random access, provable security, simplicity
            - XTS-AES - Data encryption for data stored in sector based devices, two pass tweakable
                - Requirements
                    - Data accessed independently from other, encryption performed in independent blocks, same plaintext encrypted to different ciphertexts at different locations
                - Tweakable Block Cipher
                    - Tweak - each data unit assigned a tweak, ensuring same position in two different data units will encrypt to two different ciphertext blocks
                - Advantages
                    - Efficiency - parallel encryption, simulataneous, random access, nonce and counter, solves stored data security concern
            - Vernam Cipher and One-Time Pad
                - Perfect Security
                - Encryption involves taking each character and performing XOR with corresponding bit of key, reverse to decrypt
                - Practical Limitation
                    - Can only use key once, how to distribute key, key must be as long as message
        - Asymmetric Encryption (K, K')
            - Characteristics
                - Computionally infeasible to compute K' from K
                - K can be made public due to the above fact
                - Public keys are not confidential but must be authenticated
            - Hard Problems
                - Factoring Problem - exponentially difficult, no known algorithms, lack of structure
                - Discrete Logarithm Problem
                - Diffie-Hellman Problem
            - RSA Encryption
                - Key Generation 0 p,q large primes i.e. 500 bits
                - Encryption - c = m^e mod n
                - Decryption - m = c^d mod n
                - Diffiucult - computing private key from public key is related to factoring, n is massive number i.e. hard to factor
                - Salting - addd random bytes e.g. PKCS#1
            - EIGamal Encryption Scheme
                - What....
        - Encryption in Practice
            - Public Key Encryption i.e. K,K' to exchange Symmetric Key i.e. G,G
            - Digital Enveloping
                - A Generates Symmetric Key
                - A Encrypts Data with Symmetric Key
                - A Encrypts Symmetric Key with B's Public Key
                - A Sends Envelop to B
                - B Decrypts Envelope with Private Key
                - B Decrypts Data with Symmetric Key
            - Message Integrity
                - Hash Function - map messages of arbitrary length to fixed length , collisions occur i.e. many to one mapping
                    - Ease of computation
                    - Strong Collision Resistance i.e. hard to find h(x) = h(y)
                    - One Way Property i.e. hard to find h(x) = y if y is a hash value
                    - Preimage - given a hash value, computationally difficult to find any message that hashes to that value
                    - 2nd Preimage - given an input, computationallly difficult to find another input that hashes to the same value
                    - Applications
                        - Integrity check for software
                        - Digital Signature Schemes
                        - Key Generation
                        - One Way Knowledge Proof
                - Birthday Paradox
                    - Probability any two people in a group share the same birthday quickly approaches one
                    - It is easier to find colitions than to find preimages or 2nd preimages
                - Message Authentication Codes
                    - Hash that takes as input a message and a secret key, produces a fixed size output of n bit called the MAC
                    - MAC Value = MAC(m, k), append MAC to message
                    - Properties
                        - Ease of computation
                        - Key non-recovery i.e. computationally infeasible to recover secret key k given text-MAC pairs
                        - Computaion Resistance - given (x, MAC(x)), infeasible to find (xi, MAC(xi)) for any new input
                    - Cipher Block Chaining Message Authentication Code - secure for fixed number of blocks messages
                    - Hash Based Message Authentication
                    - Digital Signatures - message authentication and nonrepudiation
                        - Generate K,K', sign using K', verify using K
                    - Hash and Sign Paradigm - hash message first and then apply public/private key operations
                        - Hash -> encrypt to form signature -> append signature to message
                        - Decrypt signature with public key, compare hash value with message to decrypted signature, if same then valid
                        - Schemes - Rivest Shamir, Adleman (RSA), Digital Signature Algorithm (DSA), Elliptic Curve DSA (ECDSA)

            